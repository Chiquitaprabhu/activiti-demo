/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Subject, from } from 'rxjs';
import { Component, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { MatDialogRef } from '@angular/material';
import { AlfrescoApiService } from '@alfresco/adf-core';
import { debounceTime, mergeMap, takeUntil } from 'rxjs/operators';
var LibraryDialogComponent = /** @class */ (function () {
    function LibraryDialogComponent(alfrescoApiService, formBuilder, dialog) {
        this.alfrescoApiService = alfrescoApiService;
        this.formBuilder = formBuilder;
        this.dialog = dialog;
        /**
         * Emitted when an error occurs.
         */
        this.error = new EventEmitter();
        /**
         * Emitted when the new library is created successfully. The
         * event parameter is a SiteEntry object with the details of the
         * newly-created library.
         */
        this.success = new EventEmitter();
        this.onDestroy$ = new Subject();
        this.createTitle = 'LIBRARY.DIALOG.CREATE_TITLE';
        this.libraryTitleExists = false;
        this.visibilityOptions = [
            { value: 'PUBLIC', label: 'LIBRARY.VISIBILITY.PUBLIC', disabled: false },
            { value: 'PRIVATE', label: 'LIBRARY.VISIBILITY.PRIVATE', disabled: false },
            {
                value: 'MODERATED',
                label: 'LIBRARY.VISIBILITY.MODERATED',
                disabled: false
            }
        ];
    }
    /**
     * @return {?}
     */
    LibraryDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var validators = {
            id: [
                Validators.required,
                Validators.maxLength(72),
                this.forbidSpecialCharacters
            ],
            title: [
                Validators.required,
                this.forbidOnlySpaces,
                Validators.minLength(2),
                Validators.maxLength(256)
            ],
            description: [Validators.maxLength(512)]
        };
        this.form = this.formBuilder.group({
            title: [null, validators.title],
            id: [null, validators.id, this.createSiteIdValidator()],
            description: ['', validators.description]
        });
        this.visibilityOption = this.visibilityOptions[0].value;
        this.form.controls['title'].valueChanges
            .pipe(debounceTime(300), mergeMap((/**
         * @param {?} title
         * @return {?}
         */
        function (title) { return _this.checkLibraryNameExists(title); }), (/**
         * @param {?} title
         * @return {?}
         */
        function (title) { return title; })), takeUntil(this.onDestroy$))
            .subscribe((/**
         * @param {?} title
         * @return {?}
         */
        function (title) {
            if (!_this.form.controls['id'].dirty && _this.canGenerateId(title)) {
                _this.form.patchValue({ id: _this.sanitize(title.trim()) });
                _this.form.controls['id'].markAsTouched();
            }
        }));
    };
    /**
     * @return {?}
     */
    LibraryDialogComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    };
    Object.defineProperty(LibraryDialogComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            var title = this.form.value.title;
            return (title || '').trim();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryDialogComponent.prototype, "id", {
        get: /**
         * @return {?}
         */
        function () {
            var id = this.form.value.id;
            return (id || '').trim();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryDialogComponent.prototype, "description", {
        get: /**
         * @return {?}
         */
        function () {
            var description = this.form.value.description;
            return (description || '').trim();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryDialogComponent.prototype, "visibility", {
        get: /**
         * @return {?}
         */
        function () {
            return this.visibilityOption || '';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    LibraryDialogComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var _a = this, form = _a.form, dialog = _a.dialog;
        if (!form.valid) {
            return;
        }
        this.create().subscribe((/**
         * @param {?} node
         * @return {?}
         */
        function (node) {
            _this.success.emit(node);
            dialog.close(node);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) { return _this.handleError(error); }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LibraryDialogComponent.prototype.visibilityChangeHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.visibilityOption = event.value;
    };
    /**
     * @private
     * @return {?}
     */
    LibraryDialogComponent.prototype.create = /**
     * @private
     * @return {?}
     */
    function () {
        var _a = this, title = _a.title, id = _a.id, description = _a.description, visibility = _a.visibility;
        /** @type {?} */
        var siteBody = (/** @type {?} */ ({
            id: id,
            title: title,
            description: description,
            visibility: visibility
        }));
        return from(this.alfrescoApiService.sitesApi.createSite(siteBody));
    };
    /**
     * @private
     * @param {?} input
     * @return {?}
     */
    LibraryDialogComponent.prototype.sanitize = /**
     * @private
     * @param {?} input
     * @return {?}
     */
    function (input) {
        return input.replace(/[\s\s]+/g, '-').replace(/[^A-Za-z0-9-]/g, '');
    };
    /**
     * @private
     * @param {?} title
     * @return {?}
     */
    LibraryDialogComponent.prototype.canGenerateId = /**
     * @private
     * @param {?} title
     * @return {?}
     */
    function (title) {
        return Boolean(title.replace(/[^A-Za-z0-9-]/g, '').length);
    };
    /**
     * @private
     * @param {?} error
     * @return {?}
     */
    LibraryDialogComponent.prototype.handleError = /**
     * @private
     * @param {?} error
     * @return {?}
     */
    function (error) {
        try {
            var statusCode = JSON.parse(error.message).error.statusCode;
            if (statusCode === 409) {
                this.form.controls['id'].setErrors({
                    message: 'LIBRARY.ERRORS.CONFLICT'
                });
            }
        }
        catch (error) {
        }
        return error;
    };
    /**
     * @private
     * @param {?} libraryTitle
     * @return {?}
     */
    LibraryDialogComponent.prototype.checkLibraryNameExists = /**
     * @private
     * @param {?} libraryTitle
     * @return {?}
     */
    function (libraryTitle) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var entries, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        entries = [];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.findLibraryByTitle(libraryTitle)];
                    case 2:
                        entries = (_b.sent()).list.entries;
                        return [3 /*break*/, 4];
                    case 3:
                        _a = _b.sent();
                        entries = [];
                        return [3 /*break*/, 4];
                    case 4:
                        if (entries.length) {
                            this.libraryTitleExists = entries[0].entry.title.toLowerCase() === libraryTitle.toLowerCase();
                        }
                        else {
                            this.libraryTitleExists = false;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} libraryTitle
     * @return {?}
     */
    LibraryDialogComponent.prototype.findLibraryByTitle = /**
     * @private
     * @param {?} libraryTitle
     * @return {?}
     */
    function (libraryTitle) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.alfrescoApiService
                        .getInstance()
                        .core.queriesApi.findSites(libraryTitle, {
                        maxItems: 1,
                        fields: ['title']
                    })];
            });
        });
    };
    /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    LibraryDialogComponent.prototype.forbidSpecialCharacters = /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var value = _a.value;
        if (value === null || value.length === 0) {
            return null;
        }
        /** @type {?} */
        var validCharacters = /[^A-Za-z0-9-]/;
        /** @type {?} */
        var isValid = !validCharacters.test(value);
        return isValid
            ? null
            : {
                message: 'LIBRARY.ERRORS.ILLEGAL_CHARACTERS'
            };
    };
    /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    LibraryDialogComponent.prototype.forbidOnlySpaces = /**
     * @private
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var value = _a.value;
        if (value === null || value.length === 0) {
            return null;
        }
        /** @type {?} */
        var isValid = !!(value || '').trim();
        return isValid
            ? null
            : {
                message: 'LIBRARY.ERRORS.ONLY_SPACES'
            };
    };
    /**
     * @private
     * @return {?}
     */
    LibraryDialogComponent.prototype.createSiteIdValidator = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var timer;
        return (/**
         * @param {?} control
         * @return {?}
         */
        function (control) {
            if (timer) {
                clearTimeout(timer);
            }
            return new Promise((/**
             * @param {?} resolve
             * @return {?}
             */
            function (resolve) {
                timer = setTimeout((/**
                 * @return {?}
                 */
                function () {
                    return from(_this.alfrescoApiService.sitesApi.getSite(control.value)).subscribe((/**
                     * @return {?}
                     */
                    function () { return resolve({ message: 'LIBRARY.ERRORS.EXISTENT_SITE' }); }), (/**
                     * @return {?}
                     */
                    function () { return resolve(null); }));
                }), 300);
            }));
        });
    };
    LibraryDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-library-dialog',
                    template: "<h2 mat-dialog-title>{{ createTitle | translate }}</h2>\n\n<mat-dialog-content>\n  <form novalidate [formGroup]=\"form\" (submit)=\"submit()\">\n    <mat-form-field>\n      <input\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.NAME' | translate }}\"\n        required\n        matInput\n        autofocus\n        formControlName=\"title\"\n        autocomplete=\"off\"\n      />\n\n      <mat-hint *ngIf=\"libraryTitleExists\">{{\n        'LIBRARY.HINTS.SITE_TITLE_EXISTS' | translate\n      }}</mat-hint>\n      <mat-error *ngIf=\"form.controls['title'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.TITLE_TOO_LONG' | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['title'].hasError('minlength')\">\n        {{ 'LIBRARY.ERRORS.TITLE_TOO_SHORT' | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['title'].errors?.message\">\n        {{ form.controls['title'].errors?.message | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        required\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.SITE_ID' | translate }}\"\n        matInput\n        formControlName=\"id\"\n        autocomplete=\"off\"\n      />\n\n      <mat-error *ngIf=\"form.controls['id'].errors?.message\">\n        {{ form.controls['id'].errors?.message | translate }}\n      </mat-error>\n\n      <mat-error *ngIf=\"form.controls['id'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.ID_TOO_LONG' | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <textarea\n        matInput\n        placeholder=\"{{ 'LIBRARY.DIALOG.FORM.DESCRIPTION' | translate }}\"\n        rows=\"3\"\n        formControlName=\"description\"\n      ></textarea>\n\n      <mat-error *ngIf=\"form.controls['description'].hasError('maxlength')\">\n        {{ 'LIBRARY.ERRORS.DESCRIPTION_TOO_LONG' | translate }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-radio-group\n      [ngModelOptions]=\"{ standalone: true }\"\n      [(ngModel)]=\"visibilityOption\"\n      (change)=\"visibilityChangeHandler($event)\"\n    >\n      <mat-radio-button\n        color=\"primary\"\n        [disabled]=\"option.disabled\"\n        *ngFor=\"let option of visibilityOptions\"\n        [attr.data-automation-id]=\"option.value\"\n        [value]=\"option.value\"\n        [checked]=\"visibilityOption.value === option.value\"\n      >\n        {{ option.label | translate }}\n      </mat-radio-button>\n    </mat-radio-group>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-action-buttons\">\n  <button mat-button mat-dialog-close data-automation-id=\"cancel-library-id\">\n    {{ 'LIBRARY.DIALOG.CANCEL' | translate }}\n  </button>\n\n  <button\n    color=\"primary\"\n    mat-button\n    (click)=\"submit()\"\n    [disabled]=\"!form.valid\"\n    data-automation-id=\"create-library-id\"\n  >\n    {{ 'LIBRARY.DIALOG.CREATE' | translate }}\n  </button>\n</mat-dialog-actions>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-library-dialog' },
                    styles: [".adf-library-dialog .mat-radio-group{display:flex;flex-direction:column;margin:0 0 20px}.adf-library-dialog .mat-radio-group .mat-radio-button{margin:10px 0}.adf-library-dialog .mat-form-field{width:100%}.adf-library-dialog mat-form-field{padding-top:20px}.adf-library-dialog .adf-action-buttons{display:flex;flex-direction:row;justify-content:flex-end}.adf-library-dialog .adf-action-buttons .mat-button{text-transform:uppercase}"]
                }] }
    ];
    /** @nocollapse */
    LibraryDialogComponent.ctorParameters = function () { return [
        { type: AlfrescoApiService },
        { type: FormBuilder },
        { type: MatDialogRef }
    ]; };
    LibraryDialogComponent.propDecorators = {
        error: [{ type: Output }],
        success: [{ type: Output }]
    };
    return LibraryDialogComponent;
}());
export { LibraryDialogComponent };
if (false) {
    /**
     * Emitted when an error occurs.
     * @type {?}
     */
    LibraryDialogComponent.prototype.error;
    /**
     * Emitted when the new library is created successfully. The
     * event parameter is a SiteEntry object with the details of the
     * newly-created library.
     * @type {?}
     */
    LibraryDialogComponent.prototype.success;
    /** @type {?} */
    LibraryDialogComponent.prototype.onDestroy$;
    /** @type {?} */
    LibraryDialogComponent.prototype.createTitle;
    /** @type {?} */
    LibraryDialogComponent.prototype.libraryTitleExists;
    /** @type {?} */
    LibraryDialogComponent.prototype.form;
    /** @type {?} */
    LibraryDialogComponent.prototype.visibilityOption;
    /** @type {?} */
    LibraryDialogComponent.prototype.visibilityOptions;
    /**
     * @type {?}
     * @private
     */
    LibraryDialogComponent.prototype.alfrescoApiService;
    /**
     * @type {?}
     * @private
     */
    LibraryDialogComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    LibraryDialogComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,