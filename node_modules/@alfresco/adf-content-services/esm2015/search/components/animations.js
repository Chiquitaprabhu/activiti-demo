/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { trigger, transition, animate, style, state } from '@angular/animations';
/** @type {?} */
export const searchAnimation = trigger('transitionMessages', [
    state('active', style({
        'margin-left': '{{ margin-left }}px',
        'margin-right': '{{ margin-right }}px',
        'transform': '{{ transform }}'
    }), { params: { 'margin-left': 0, 'margin-right': 0, 'transform': 'translateX(0%)' } }),
    state('inactive', style({
        'margin-left': '{{ margin-left }}px',
        'margin-right': '{{ margin-right }}px',
        'transform': '{{ transform }}'
    }), { params: { 'margin-left': 0, 'margin-right': 0, 'transform': 'translateX(0%)' } }),
    state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),
    transition('active <=> inactive', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInNlYXJjaC9jb21wb25lbnRzL2FuaW1hdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQTRCLE1BQU0scUJBQXFCLENBQUM7O0FBRTNHLE1BQU0sT0FBTyxlQUFlLEdBQTZCLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRTtJQUNuRixLQUFLLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQztRQUNsQixhQUFhLEVBQUUscUJBQXFCO1FBQ3BDLGNBQWMsRUFBRSxzQkFBc0I7UUFDdEMsV0FBVyxFQUFFLGlCQUFpQjtLQUNqQyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUFFLGNBQWMsRUFBRSxDQUFDLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsQ0FBQztJQUN2RixLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQztRQUNwQixhQUFhLEVBQUUscUJBQXFCO1FBQ3BDLGNBQWMsRUFBRSxzQkFBc0I7UUFDdEMsV0FBVyxFQUFFLGlCQUFpQjtLQUNqQyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxhQUFhLEVBQUUsQ0FBQyxFQUFFLGNBQWMsRUFBRSxDQUFDLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsQ0FBQztJQUN2RixLQUFLLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM1RSxVQUFVLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7Q0FDdkYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IHRyaWdnZXIsIHRyYW5zaXRpb24sIGFuaW1hdGUsIHN0eWxlLCBzdGF0ZSwgQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbmV4cG9ydCBjb25zdCBzZWFyY2hBbmltYXRpb246IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSA9IHRyaWdnZXIoJ3RyYW5zaXRpb25NZXNzYWdlcycsIFtcbiAgICBzdGF0ZSgnYWN0aXZlJywgc3R5bGUoe1xuICAgICAgICAnbWFyZ2luLWxlZnQnOiAne3sgbWFyZ2luLWxlZnQgfX1weCcsXG4gICAgICAgICdtYXJnaW4tcmlnaHQnOiAne3sgbWFyZ2luLXJpZ2h0IH19cHgnLFxuICAgICAgICAndHJhbnNmb3JtJzogJ3t7IHRyYW5zZm9ybSB9fSdcbiAgICB9KSwgeyBwYXJhbXM6IHsgJ21hcmdpbi1sZWZ0JzogMCwgJ21hcmdpbi1yaWdodCc6IDAsICd0cmFuc2Zvcm0nOiAndHJhbnNsYXRlWCgwJSknIH0gfSksXG4gICAgc3RhdGUoJ2luYWN0aXZlJywgc3R5bGUoe1xuICAgICAgICAnbWFyZ2luLWxlZnQnOiAne3sgbWFyZ2luLWxlZnQgfX1weCcsXG4gICAgICAgICdtYXJnaW4tcmlnaHQnOiAne3sgbWFyZ2luLXJpZ2h0IH19cHgnLFxuICAgICAgICAndHJhbnNmb3JtJzogJ3t7IHRyYW5zZm9ybSB9fSdcbiAgICB9KSwgeyBwYXJhbXM6IHsgJ21hcmdpbi1sZWZ0JzogMCwgJ21hcmdpbi1yaWdodCc6IDAsICd0cmFuc2Zvcm0nOiAndHJhbnNsYXRlWCgwJSknIH0gfSksXG4gICAgc3RhdGUoJ25vLWFuaW1hdGlvbicsIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwJSknLCB3aWR0aDogJzEwMCUnIH0pKSxcbiAgICB0cmFuc2l0aW9uKCdhY3RpdmUgPD0+IGluYWN0aXZlJywgYW5pbWF0ZSgnNDAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSknKSlcbl0pO1xuIl19