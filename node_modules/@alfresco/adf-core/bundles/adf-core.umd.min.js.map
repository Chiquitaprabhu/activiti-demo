{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/jwt-helper.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/models/allowable-operations.enum.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/full-name.pipe.ts","ng://@alfresco/adf-core/pipes/format-space.pipe.ts","ng://@alfresco/adf-core/pipes/file-type.pipe.ts","ng://@alfresco/adf-core/pipes/multi-value.pipe.ts","ng://@alfresco/adf-core/pipes/localized-date.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/check-allowable-operation.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/services/download-zip.service.ts","ng://@alfresco/adf-core/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-core/directives/node-download.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-empty-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/components/datatable/json-cell.component.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/drop-zone.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/services/previous-route.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/identity-user.model.ts","ng://@alfresco/adf-core/userinfo/services/identity-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/models/identity-role.model.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/form-base.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/components/form-base.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/form-renderer.component.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form-base.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard-base.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/auth-guard-sso-role.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/services/lock.service.ts","ng://@alfresco/adf-core/mock/form/demo-form.mock.ts","ng://@alfresco/adf-core/services/automation.service.ts","ng://@alfresco/adf-core/dialogs/dialog.module.ts","ng://@alfresco/adf-core/icon/icon.component.ts","ng://@alfresco/adf-core/icon/icon.module.ts","ng://@alfresco/adf-core/notification-history/notification-history.component.ts","ng://@alfresco/adf-core/notification-history/notification-history.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/models/request-pagination.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/services/directionality-config-factory.ts","ng://@alfresco/adf-core/services/directionality-config.service.ts","ng://@alfresco/adf-core/core.module.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibility.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts","ng://@alfresco/adf-core/mock/jwt-helper.service.spec.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","ObjectUtils","getValue","target","key","undefined","keys","split","shift","merge","objects","_i","forEach","source","prop","isArray","APP_CONFIG_LANGUAGES_KEY","PROVIDERS","OAUTHCONFIG","ECMHOST","BASESHAREURL","BPMHOST","IDENTITY_HOST","AUTHTYPE","CONTEXTROOTECM","CONTEXTROOTBPM","ALFRESCO_REPOSITORY_NAME","LOG_LEVEL","LOGIN_ROUTE","DISABLECSRF","AUTH_WITH_CREDENTIALS","APPLICATION","NOTIFY_DURATION","INIT","LOADING","LOADED","AppConfigService","http","config","application","name","ecmHost","bpmHost","logLevel","alfrescoRepositoryName","status","Status","onLoadSubject","Subject","onLoad","asObservable","select","property","pipe","map","distinctUntilChanged","get","defaultValue","keywords","Map","set","getLocationHostname","getLocationPort","getLocationProtocol","formatString","location","protocol","hostname","prefix","port","load","_this","configUrl","Date","now","subscribe","data","_a","str","expr","RegExp","replace","Injectable","args","providedIn","HttpClient","AlfrescoApiService","appConfig","nodeUpdated","getInstance","alfrescoApi","defineProperty","activiti","taskApi","content","nodes","core","renditionsApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","search","searchApi","versionsApi","classesApi","groupsApi","initAlfrescoApi","reset","oauth","AppConfigValues","redirectUri","window","origin","redirectUriLogout","AlfrescoApiConfig","provider","hostEcm","hostBpm","authType","contextRootBpm","contextRoot","disableCsrf","withCredentials","oauth2","isDifferentConfig","lastConfig","configureJsApi","AlfrescoApiCompatibility","newConfig","JSON","stringify","CookieService","isEnabled","navigator","cookieEnabled","document","cookie","indexOf","getItem","exec","setItem","expiration","path","toUTCString","clear","LogLevelsEnum","_super","tslib_1.__extends","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","Number","logLevels","level","LogService","onMessage","configLevel","getLogLevel","message","optionalParams","currentLogLevel","messageBus","console","debug","info","log","trace","warn","assert","test","group","groupTitle","groupEnd","referencedLevel","find","currentLevel","toLocaleLowerCase","text","type","JwtHelperService","decodeToken","token","parts","Error","decoded","urlBase64Decode","parse","output","decodeURIComponent","escape","atob","getValueFromLocalAccessToken","accessToken","localStorage","USER_ACCESS_TOKEN","getValueFromToken","USER_NAME","FAMILY_NAME","GIVEN_NAME","USER_EMAIL","USER_PREFERRED_USERNAME","REMEMBER_ME_COOKIE_KEY","AuthenticationService","logService","redirectUrl","bearerExcludedUrls","onLogin","onLogout","isLoggedIn","isOauth","isRememberMeSet","isOauthConfiguration","isECMProvider","isEcmConfiguration","isBPMProvider","isBpmConfiguration","isALLProvider","isEcmBpmConfiguration","login","username","password","rememberMe","from","response","saveRememberMeCookie","ticket","catchError","err","handleError","ssoImplicitLogin","implicitLogin","expireTime","getTime","setTime","logout","callApiLogout","tap","getTicketEcm","getTicketBpm","getTicketEcmBase64","btoa","isEcmLoggedIn","isBpmLoggedIn","getEcmUsername","getBpmUsername","setRedirect","url","getRedirect","hasValidRedirection","getBpmLoggedUser","profileApi","getProfile","hasSelectedProviderAll","throwError","getBearerExcludedUrls","getToken","addTokenToHeader","headersArg","Observable","observer","headers","HttpHeaders","complete","isSSODiscoveryConfigured","storage","BpmProductVersionModel","obj","edition","majorVersion","revisionVersion","minorVersion","VersionModel","major","minor","patch","hotfix","schema","display","LicenseModel","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","VersionStatusModel","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","VersionModuleModel","id","title","description","version","installDate","installState","versionMin","versionMax","EcmProductVersionModel","modules","entry","repository","license","module","DiscoveryApiService","apiService","getEcmProductInfo","discovery","discoveryApi","getRepositoryInformation","res","getBpmProductInfo","aboutApi","getAppVersion","FileUtils","flatten","folder","reader","createReader","files","iterations","traverse","readEntries","entries","all","isFile","resolveFile","file","relativeFolder","fullPath","toFileArray","fileList","MOMENT_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateAdapter","localeData","moment","getYear","date","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","months","monthsShort","getDateNames","dateNames","String","getDayOfWeekNames","weekdays","weekdaysShort","getYearName","getFirstDayOfWeek","firstDayOfWeek","getNumDaysInMonth","daysInMonth","clone","locale","createDate","today","parseFormat","isValid","overrideDisplayFormat","currentYear","getFullYear","isAfter","format","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","getISODateString","toISOString","setLocale","compareDate","first","second","diff","sameDate","isMoment","isSame","clampDate","min","max","isBefore","isDateInstance","isValidDateInstance","_isAMomentObject","toIso8601","fromIso8601","iso8601String","ISO_8601","invalid","DateAdapter","ObjectDataRow","isSelected","hasValue","imageErrorResolver","event","ObjectDataColumn","input","sortable","srTitle","cssClass","template","copyContent","DataSorting","direction","ObjectDataTableAdapter","_rows","_columns","item","filter","column","sort","rowsChanged","generateSchema","rowToExaminate","getRows","setRows","rows","getColumns","setColumns","columns","row","col","getSorting","_sorting","setSorting","sorting","a","left","valueOf","toString","right","localeCompare","AboutComponent","authService","appExtensions","extensionColumns","githubUrlCommitAlpha","showExtensions","regexp","ecmVersion","bpmVersion","extensions$","references$","ngOnInit","ecmVers","bpmVers","alfrescoPackages","dependencies","val","alfrescoPackagesTableRepresentation","required","gitHubLinkCreation","corePackage","packageUp","commitIsh","Component","selector","encapsulation","ViewEncapsulation","None","AppExtensionService","Input","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","MaterialModule","NgModule","imports","exports","ContextMenuService","show","ContextMenuHolderComponent","viewport","overlayContainer","contextMenuService","renderer","links","mouseLocation","top","menuElement","subscriptions","showIcons","onShowContextMenu","preventDefault","onResize","mdMenuElement","updatePosition","mouseEvent","showMenu","menuTrigger","onMenuOpen","container","getContainerElement","contextMenuListenerFn","listen","contextmenuEvent","getContextMenuElement","onMenuClose","ngOnDestroy","subscription","unsubscribe","onMenuItemClick","menuItem","model","disabled","stopImmediatePropagation","subject","clientX","clientY","openMenu","locationCss","setTimeout","parentElement","clientWidth","getViewportRect","width","menu","xPosition","clientHeight","height","yPosition","querySelector","ViewportRuler","OverlayContainer","Renderer2","ViewChild","MatMenuTrigger","HostListener","ContextMenuOverlayRef","overlayRef","close","dispose","CONTEXT_MENU_DATA","InjectionToken","contextMenuAnimation","state","opacity","transform","transition","sequence","query","animate","ContextMenuListComponent","contextMenuOverlayRef","handleKeydownEscape","handleKeydownEvent","keyCode","UP_ARROW","DOWN_ARROW","keyManager","onKeydown","ngAfterViewInit","FocusKeyManager","items","setFirstItemActive","host","role","class","animations","trigger","decorators","Inject","Optional","ViewChildren","MatMenuItem","DEFAULT_CONFIG","panelClass","backdropClass","hasBackdrop","ContextMenuOverlayService","injector","overlay","open","overlayConfig","createOverlay","attachDialogContainer","backdropClick","_backdropElement","addEventListener","_backdropClick","getOverlayConfig","createInjector","containerPortal","ComponentPortal","attach","instance","injectionTokens","WeakMap","PortalInjector","fakeElement","getBoundingClientRect","bottom","positionStrategy","position","connectedTo","ElementRef","originX","originY","overlayX","overlayY","withFallbackPosition","OverlayConfig","scrollStrategy","scrollStrategies","Injector","Overlay","ContextMenuDirective","enabled","Directive","ContextMenuModule","CommonModule","TranslateModule","forChild","declarations","entryComponents","StorageService","appConfigService","memoryStore","useLocalStorage","storageAvailable","getAppPrefix","bind","storagePrefix","removeItem","hasItem","appConfiguration","PaginationSize","Locale","SupportedPageSizes","ExpandedSideNavStatus","UserPreferencesService","translate","defaults","paginationSize","supportedPageSizes","expandedSidenav","userPreferenceStatus","initUserPreferenceStatus","onChangeSubject","BehaviorSubject","onChange","initUserLanguage","UserPreferenceValues","getDefaultLocale","getLanguageByKey","setWithoutStore","getPropertyKey","getStoragePrefix","setStoragePrefix","getBrowserCultureLang","language","includes","TranslateService","TRANSLATION_PROVIDER","TranslationService","userPreferencesService","providers","customLoader","defaultLang","setDefaultLang","providers_1","tslib_1.__values","providers_1_1","addTranslationFolder","userLang","use","providerRegistered","registerProvider","loadTranslation","lang","fallback","getTranslation","onTranslationChanged","onTranslationChange","translations","getFullTranslationJSON","init","interpolateParams","instant","FileSizePipe","translation","bytes","decimals","dm","Math","floor","i18nSize","parseFloat","pow","toFixed","Pipe","pure","PermissionsEnum","CONTRIBUTOR","CONSUMER","COLLABORATOR","MANAGER","EDITOR","COORDINATOR","NOT_CONTRIBUTOR","NOT_CONSUMER","NOT_COLLABORATOR","NOT_MANAGER","NOT_EDITOR","NOT_COORDINATOR","AllowableOperationsEnum","DELETE","UPDATE","CREATE","COPY","LOCK","UPDATEPERMISSIONS","NOT_DELETE","NOT_UPDATE","NOT_CREATE","NOT_UPDATEPERMISSIONS","ContentService","sanitizer","folderCreated","folderCreate","folderEdit","saveData","createElement","appendChild","fileData","fileName","blob","Blob","json","msSaveOrOpenBlob","URL","createObjectURL","href","download","click","revokeObjectURL","downloadBlob","downloadData","downloadJSON","createTrustedUrl","bypassSecurityTrustUrl","getDocumentThumbnailUrl","node","attachment","contentApi","getContentUrl","getNodeContent","nodeId","nodesApi","getFileContent","getNode","opts","hasPermissions","permission","permissions","locallySet","startsWith","currentPermission","hasAllowableOperations","allowableOperation","allowableOperations","currentOperation","isLocked","DomSanitizer","ThumbnailService","contentService","matIconRegistry","DEFAULT_ICON","mimeTypeIcons","image/png","image/jpeg","image/gif","image/bmp","image/cgm","image/ief","image/jp2","image/tiff","image/vnd.adobe.photoshop","image/vnd.adobe.premiere","image/x-cmu-raster","image/x-dwt","image/x-portable-anymap","image/x-portable-bitmap","image/x-portable-graymap","image/x-portable-pixmap","image/x-raw-adobe","image/x-raw-canon","image/x-raw-fuji","image/x-raw-hasselblad","image/x-raw-kodak","image/x-raw-leica","image/x-raw-minolta","image/x-raw-nikon","image/x-raw-olympus","image/x-raw-panasonic","image/x-raw-pentax","image/x-raw-red","image/x-raw-sigma","image/x-raw-sony","image/x-xbitmap","image/x-xpixmap","image/x-xwindowdump","image/svg+xml","application/eps","application/illustrator","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.ms-excel.addin.macroenabled.12","application/vnd.ms-excel.sheet.binary.macroenabled.12","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-excel.template.macroenabled.12","application/vnd.sun.xml.calc","application/vnd.sun.xml.calc.template","application/vnd.ms-outlook","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.template","application/rtf","text/rtf","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.presentation-template","application/vnd.openxmlformats-officedocument.presentationml.slide","application/vnd.sun.xml.impress","application/vnd.sun.xml.impress.template","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.ms-powerpoint.addin.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/vnd.ms-powerpoint.slide.macroenabled.12","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","video/mp4","video/3gpp","video/3gpp2","video/mp2t","video/mpeg","video/mpeg2","video/ogg","video/quicktime","video/webm","video/x-flv","video/x-m4v","video/x-ms-asf","video/x-ms-wmv","video/x-msvideo","video/x-rad-screenplay","video/x-sgi-movie","video/x-matroska","audio/mpeg","audio/ogg","audio/wav","audio/basic","audio/mp4","audio/vnd.adobe.soundbooth","audio/vorbis","audio/x-aiff","audio/x-flac","audio/x-ms-wma","audio/x-wav","x-world/x-vrml","text/plain","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.text-template","application/x-javascript","application/json","text/csv","text/xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/x-tar","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","application/vnd.visio","application/wordperfect","application/x-cpio","smartFolder","ruleFolder","linkFolder","disable/folder","selected","bypassSecurityTrustResourceUrl","addSvgIcon","addSvgIconInNamespace","getMimeTypeIcon","mimeType","getDefaultMimeTypeIcon","MatIconRegistry","MimeTypeIconPipe","thumbnailService","NodeNameTooltipPipe","getNodeTooltip","containsLine","lines","line","some","toLowerCase","removeDuplicateLines","reduce","acc","properties","join","HighlightTransformService","highlight","wrapperClass","isMatching","pattern","regex","match","changed","HighlightPipe","highlightTransformService","TimeAgoPipe","userPreferenceService","defaultLocale","DEFAULT_LOCALE","defaultDateTimeFormat","DEFAULT_DATE_TIME_FORMAT","actualLocale","DatePipe","fromNow","InitialUsernamePipe","sanitized","user","className","delimiter","safeHtml","initialResult","getInitialUserName","firstName","lastName","bypassSecurityTrustHtml","FullNamePipe","fullName","FormatSpacePipe","inputValue","replaceChar","lowerCase","transformedString","trim","FileTypePipe","substring","lastIndexOf","MultiValuePipe","values","valueSeparator","DEFAULT_SEPARATOR","LocalizedDatePipe","defaultFormat","DEFAULT_DATE_FORMAT","actualFormat","PipeModule","HighlightDirective","el","classToApply","ngAfterViewChecked","nativeElement","querySelectorAll","element","highlightTransformResult","innerHTML","setProperty","LogoutDirective","elementRef","router","auth","enableRedirect","evt","redirectToUri","navigate","Router","NodeDeleteDirective","alfrescoApiService","permanent","delete","EventEmitter","onClick","process","selection","ngOnChanges","setDisableAttribute","hasAttribute","disable","batch","getDeleteNodesBatch","forkJoin","processedItems","processStatus","getMessage","emit","deleteNode","promise","purgeDeletedNode","of","success","failed","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","number","Output","NodeFavoriteDirective","favorites","toggle","toggleFavorite","changes","currentValue","markFavoritesNodes","every","isFavorite","removeFavoriteSite","notFavorite_1","createFavoriteBody","addFavorite","newFavorites","getProcessBatch","hasFavorites","getFavorite","isFolder","getNodeType","guid","list","ids","comparator","exportAs","EXTENDIBLE_COMPONENT","CheckAllowableOperationDirective","changeDetector","parentComponent","firstChange","updateElement","enable","detectChanges","enableElement","disableElement","removeAttribute","setAttribute","ChangeDetectorRef","Host","RestoreMessageModel","NodeRestoreDirective","restore","restoreProcessStatus","recover","nodesWithPath","getNodesWithPath","fail","notification","restoreNodesBatch","restoredNodes","_b","mergeMap","getDeletedNodes","deletedNodesList","nodeList","restoreErrorNodes","selectedNodes","remainingNodes","restoreNode","include","statusCode","fromList","getRestoreMessage","action","UploadDirective","ngZone","isDragging","cssClassName","isClickMode","inputUpload","upload","onSelectFiles","multiple","accept","directory","isDropMode","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","classList","remove","stopPropagation","dataTransfer","getDataTransfer","getFilesDropped","onUploadFiles","customEvent","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","originalEvent","webkitGetAsEntry","item_1","getAsFile","isDirectory","resolveFolder","NgZone","DownloadZipService","createDownload","payload","downloadsApi","getDownload","downloadId","cancelDownload","DownloadZipDialogComponent","dialogRef","downloadZipService","cancelled","nodeIds","downloadZip","url_1","downloadNode","waitAndDownload","downloadEntry","link","removeChild","MatDialogRef","MAT_DIALOG_DATA","NodeDownloadDirective","dialog","downloadNodes","isSelectionValid","downloadFile","disableClose","MatDialog","DirectiveModule","DataTableCellComponent","value$","updateValue","sub","tooltip","changeDetection","ChangeDetectionStrategy","OnPush","DataColumnComponent","ContentChild","TemplateRef","DataColumnListComponent","ContentChildren","BaseEvent","isDefaultPrevented","BaseUIEvent","FileUploadOptions","Pending","Complete","Starting","Progress","Cancelled","Aborted","Deleted","FileModel","options","FileUploadStatus","size","errorCode","progress","loaded","total","percent","newVersion","slice","Infinity","FileUploadEvent","FileUploadCompleteEvent","totalComplete","totalAborted","FileUploadDeleteEvent","FileUploadErrorEvent","totalError","DataRowEvent","domEvent","DataCellEventModel","actions","DataCellEvent","DataRowActionModel","DataRowActionEvent","List","Gallery","DataTableComponent","differs","DisplayMode","selectionMode","multiselect","actionsPosition","contextMenu","allowDropFiles","rowStyleClass","showHeader","stickyHeader","rowClick","rowDblClick","showRowContextMenu","showRowActionsMenu","executeRowAction","loading","noPermission","rowMenuCacheEnabled","isSelectAllChecked","fakeRows","rowMenuCache","differ","click$","clickObserver","share","ngAfterContentInit","columnList","setTableSchema","datatableLayoutFix","initAndSubscribeClickStream","isPropertyChanged","isTableEmpty","initTable","resetSelection","setTableRows","isFirstChange","emitRowSelectionEvent","setTableSorting","ngDoCheck","convertToRowsData","convertToDataSorting","unsubscribeClickStream","singleClickStream","buffer","debounceTime","x","singleClickStreamSub","dataRowEvents","handleRowSelection","defaultPrevented","multiClickStream","multiClickStreamSub","getSchemaFromHtml","c","onRowClick","dataRowEvent","onEnterKeyPressed","isSingleSelectionMode","selectRow","isMultiSelectionMode","modifier","metaKey","ctrlKey","newValue","domEventName","onRowDblClick","onRowKeyUp","keyboardEvent","onKeyboardNavigate","onColumnHeaderClick","current","newDirection","emitSortingChangedEvent","onSelectAllClick","matCheckboxChange","checked","onCheckboxChange","onImageLoadingError","fallbackThumbnail","src","isIconValue","asIconValue","iconAltTextKey","isColumnSorted","getContextMenuActions","getRowActions","event_1","onExecuteRowAction","rowAllowsDrop","isDropTarget","hasSelectionMode","getRowStyle","getSortingKey","idx","splice","getCellTooltip","formatTooltip","getSortableColumns","isEmpty","isHeaderVisible","isStickyHeaderEnabled","dataRowsChanged","getNameColumnValue","getAutomationValue","IterableDiffers","DateCellComponent","dateFormat","DATE_FORMAT","currentLocale","EmptyListComponent","EmptyListHeaderDirective","EmptyListBodyDirective","EmptyListFooterDirective","FileSizeCellComponent","LocationCellComponent","elements","parent_1","LoadingContentTemplateDirective","dataTable","loadingTemplate","NoContentTemplateDirective","noContentTemplate","NoPermissionTemplateDirective","noPermissionTemplate","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","JsonCellComponent","NotificationService","snackBar","translationService","DEFAULT_DURATION_MESSAGE","messages","openSnackMessage","translatedMessage","duration","dateTime","openSnackMessageAction","dismissSnackMessageAction","dismiss","showMessage","showError","showInfo","showWarning","MatSnackBar","ClipboardService","notificationService","isTargetValid","HTMLInputElement","HTMLTextAreaElement","copyToClipboard","setSelectionRange","execCommand","notify","copyContentToClipboard","clipboardData","setData","DOCUMENT","ClipboardDirective","clipboardService","viewContainerRef","resolver","handleClickEvent","showTooltip","placeholder","componentFactory","resolveComponentFactory","ClipboardComponent","createComponent","closeTooltip","ViewContainerRef","ComponentFactoryResolver","ClipboardModule","DropZoneDirective","dropTarget","dropColumn","dropRow","DataTableModule","RouterModule","DataColumnModule","AboutModule","ViewUtilService","maxRetries","mimeTypes","pdf","image","media","printFile","pwa","TARGET","ContentGroup","IMAGE","onfocus","onload","print","printFileGeneric","objectId","getViewerTypeByMimeType","getRendition","PDF","getRenditionUrl","printType","TEXT","catch","renditionExists","waitRendition","renditionId","retries","rendition","wait","editorTypes","editorTypes_1","editorTypes_1_1","ms","getRenditions","renditionPaging","renditionEntry","createRendition","err_1","MEDIA","PreviousRouteService","currentUrl","events","NavigationEnd","previousUrl","getPreviousUrl","ViewerMoreActionsComponent","ViewerOpenWithComponent","ViewerSidebarComponent","ViewerToolbarComponent","ViewerComponent","viewUtils","extensionService","previousRouteService","urlFile","urlFileViewer","sharedLinkId","overlayMode","showViewer","showToolbar","allowGoBack","allowDownload","allowPrint","allowFullScreen","allowNavigate","canNavigateBefore","canNavigateNext","allowLeftSidebar","allowRightSidebar","allowThumbnails","showRightSidebar","showLeftSidebar","sidebarRightTemplate","sidebarLeftTemplate","thumbnailsTemplate","goBack","showViewerChange","extensionChange","navigateBefore","navigateNext","invalidSharedLink","viewerType","isLoading","extensionTemplates","externalExtensions","sidebarRightTemplateContext","sidebarLeftTemplateContext","viewerExtensions","extensions","isSourceDefined","blobFile","onNodeUpdated","loadExtensions","getViewerExtensions","extension","fileExtension","generateCacheBusterNumber","setUpNodeFile","setUpBlobData","setUpUrlFile","nodeEntry","sharedLinksApi","getSharedLink","sharedLinkEntry","setUpSharedLinkFile","fileTitle","getDisplayName","scrollTop","filenameFromUrl","getFilenameFromUrl","getFileExtension","urlFileContent","displayName","getViewerTypeByExtension","cacheBusterNumber","setupNode","displayNodeRendition","details","getSharedLinkContentUrl","displaySharedLinkRendition","toggleSidebar","toggleLeftSidebar","scrollTo","isCustomViewerExtension","onBackButtonClick","history","outlets","primary","back","onNavigateBeforeClick","onNavigateNextClick","otherMenu","hidden","anchor","end","flat","handleKeyboardEvent","enterFullScreen","printContent","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","resolveRendition","sharedId","getSharedLinkRendition","getSharedLinkRenditionUrl","error_1","error_2","supportedRendition","err_2","currentRetry","intervalId","setInterval","clearInterval","checkExtensions","extensionAllowed","currentExtension","Location","ImgViewerComponent","rotate","scaleX","scaleY","offsetX","offsetY","isDragged","drag","delta","initializeScaling","round","scaling","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","onMouseMove","pageX","pageY","zoomIn","ratio","zoomOut","rotateLeft","angle","abs","rotateRight","MediaPlayerComponent","RenderingQueueServices","renderingStates","INITIAL","RUNNING","PAUSED","FINISHED","CLEANUP_TIMEOUT","pdfViewer","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","setViewer","setThumbnailViewer","isHighestPriority","view","renderingId","renderHighestPriority","currentlyVisiblePages","clearTimeout","forceRendering","getHighestPriority","visible","views","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","last","previousPageIndex","renderingState","renderView","resume","continueRendering","draw","PdfPasswordDialogComponent","passwordFormControl","FormControl","Validators","isError","reason","pdfjsLib","PasswordResponses","INCORRECT_PASSWORD","hasError","submit","PdfViewerComponent","renderingQueueServices","rendered","currentScaleMode","currentScale","MAX_AUTO_SCALE","DEFAULT_SCALE_DELTA","MIN_SCALE","MAX_SCALE","isPanelDisabled","showThumbnails","pdfThumbnailsContext","viewer","onPageChange","onPagesLoaded","onPageRendered","randomPdfId","generateUuid","getUserScaling","scaleConfig","checkLimits","reader_1","FileReader","executePdf","readAsArrayBuffer","pdfOptions","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","onPassword","callback","onPdfPassword","onProgress","progressData","loadingPercent","pdfDocument","currentPdfDocument","totalPages","numPages","page","displayPage","initPDFViewer","getPage","scalePage","getElementById","documentContainer","pdfjsViewer","PDFViewer","renderingQueue","setDocument","destroy","toggleThumbnails","scaleMode","viewerContainer","widthContainer","heightContainer","currentPage","_pages","_currentPageNumber","pageWidthScale","scale","pageHeightScale","setScaleUpdatePages","horizontalScale","isLandscape","newScale","isSameScale","update","oldScale","pageFit","ticks","ceil","previousPage","currentPageNumber","nextPage","inputPage","pageInput","parseInt","isNaN","pageNumber","afterClosed","random","PdfThumbListComponent","virtualHeight","translateY","renderItems","currentHeight","margin","itemHeight","calculateItems","eventBus","on","setHeight","getPages","scrollInto","off","trackByFn","index","pageNum","goTo","findIndex","getWidth","getHeight","calculateHeight","getViewport","pageRatio","getContainerSetup","viewPort","itemsInView","indexByScrollTop","start","elementRec","PdfThumbComponent","image$","getThumb","canvas","getCanvas","render","canvasContext","getContext","imageSource","toDataURL","TxtViewerComponent","readBlob","getUrlContent","withCredentialsMode","responseType","onerror","readAsText","UnknownFormatComponent","ViewerToolbarActionsComponent","ViewerExtensionDirective","viewerComponent","templateModel","isVisible","supportedExtensions","supportedExtension","ToolbarDividerComponent","ToolbarTitleComponent","ToolbarComponent","ToolbarModule","ViewerModule","ExtensionsModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","BpmUserModel","apps","capabilities","company","created","email","externalId","fullname","groups","lastUpdate","latestSyncTimeStamp","pictureId","tenantId","tenantName","tenantPictureId","BpmUserService","getCurrentUserInfo","userRepresentation","getCurrentUserProfileImage","getProfilePictureUrl","EcmUserModel","avatarId","skypeId","googleId","instantMessageId","jobTitle","mobile","telephone","statusUpdatedAt","userStatus","emailNotificationsEnabled","EcmUserService","getUserInfo","userName","getPerson","personEntry","getUserProfileImage","nodeObj","IdentityUserModel","IdentityUserService","jwtHelperService","familyName","givenName","findUsersByName","buildUserUrl","queryParams","oauth2Auth","callCustomApi","findUserByUsername","findUserByEmail","findUserById","getClientRoles","userId","clientId","buildUserClientRoleMapping","checkUserHasClientApp","clientRoles","checkUserHasAnyClientAppRole","roleNames","hasRole","roleName","availableRole","getClientIdByApplicationName","applicationName","buildGetClientsUrl","checkUserHasApplicationAccess","switchMap","checkUserHasAnyApplicationRole","getUsers","getUserRoles","buildRolesUrl","getUsersByRolesWithCurrentUser","filteredUsers","toPromise","users","userHasAnyRole","getUsersByRolesWithoutCurrentUser","currentUser_1","userRoles","userRole","checkUserHasRole","UserInfoComponent","ecmUserService","bpmUserService","identityUserService","ecmBackgroundImage","bpmBackgroundImage","menuPositionX","menuPositionY","showName","namePosition","loadIdentityUserInfo","loadEcmUserInfo","loadBpmUserInfo","onKeyPress","closeUserModal","$event","closeMenu","ecmUser$","bpmUser$","identityUser$","stopClosing","getEcmAvatar","getBpmUserImage","showOnRight","IdentityRoleModel","UserInfoModule","HostSettingsComponent","formBuilder","storageService","HOST_REGEX","showSelectProviders","cancel","providerSelected","form","providersControl","addFormGroups","addOAuthFormGroup","addIdentityHostFormControl","valueChanges","removeControl","removeFormGroups","addBPMFormControl","addECMFormControl","oauthFormGroup","createOAuthFormGroup","addControl","isBPM","isALL","isOAUTH","bpmFormControl","createBPMFormControl","identityHostFormControl","createIdentityFormControl","isECM","ecmFormControl","createECMFormControl","scope","secret","silentLogin","implicitFlow","onCancel","onSubmit","saveBPMValues","saveECMValues","saveOAuthValues","invalidateSession","keyDownFunction","ENTER","valid","oauthConfig","identityHost","FormBuilder","HostSettingsModule","PaginationComponent","cdr","pagination","DEFAULT_PAGINATION","change","changePageNumber","changePageSize","prevPage","pagSize","maxItems","paginationSubscription","count","isFirstPage","goPrevious","totalItems","skipCount","lastPage","isLastPage","hasItems","fill","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","previous","PREV_PAGE","onChangePageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","paginationModel","updatePagination","Pagination","HostBinding","InfinitePaginationComponent","loadMore","requestPaginationModel","_target","hasMoreItems","pageSize","onLoadMore","PaginationModule","LoginErrorEvent","LoginSubmitEvent","_values","_defaultPrevented","LoginSuccessEvent","Landing","Checking","Welcome","LoginComponent","_fb","translateService","userPreferences","route","isPasswordShow","showRememberMe","showLoginActions","needHelpLink","registerLink","logoImageUrl","backgroundImageUrl","copyrightText","successRoute","executeSubmit","actualLoginStep","LoginSteps","minLength","initFormError","initFormFieldsMessages","forward","hasCustomFieldsValidation","fieldsValidation","initFormFieldsDefault","initFormFieldsMessagesDefault","onValueChanged","disableError","errorMsg","controls","performLogin","field","formError","errors","dirty","_message","translated","navigateByUrl","displayErrorMessage","crossDomain","addCustomFormError","msg","addCustomValidationError","ruleId","toggleShowPassword","isErrorStyle","pristine","trimUsername","ActivatedRoute","LoginHeaderDirective","alfrescoLoginComponent","headerTemplate","LoginFooterDirective","footerTemplate","LoginDialogComponent","buttonActionName","actionName","toUpperCase","logged","submitForm","loginPanel","onLoginSuccess","isFormValid","LoginDialogPanelComponent","LoginModule","LanguageMenuComponent","userPreference","languages","languagesConfigApp","changeLanguage","LanguageMenuModule","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","InfoDrawerTabComponent","icon","InfoDrawerComponent","selectedIndex","currentTab","showTabLayout","contentBlocks","onTabChange","InfoDrawerModule","DataTableSchema","presetKey","presetsModel","layoutPresets","createDatatableSchema","loadLayoutPresets","mergeJsonAndHtmlSchema","externalSettings","customSchemaColumns","getSchemaFromConfig","presetColumn","getDefaultLayoutPreset","CardViewComponent","displayEmpty","transformKeyToObject","reverse","previousValue","CardViewUpdateService","itemUpdated$","itemClicked$","clicked","CardViewBoolItemComponent","cardViewUpdateService","isEditable","editable","ɵ1","MAT_MOMENT_DATETIME_FORMATS","CardViewDateItemComponent","dateAdapter","valueDate","showProperty","showDatePicker","datepicker","onDateChanged","newDateValue","momentDate","toDate","provide","useClass","MAT_DATE_FORMATS","useValue","ɵ0","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","CardViewMapItemComponent","isClickable","clickable","CardViewTextItemComponent","inEdit","editedValue","multiline","displayValue","hasIcon","hasErrors","errorMessages","setEditMode","editStatus","editorInput","resetErrorMessages","updatedValue","prepareValueForUpload","getValidationErrors","multivalued","onTextAreaInputChange","clickCallBack","CardViewSelectItemComponent","getOptions","options$","CardViewKeyValuePairsItemComponent","matTableValues","MatTableDataSource","save","onBlur","validValues","getType","DynamicComponentResolver","fromType","DynamicComponentMapper","types","getComponentTypeResolver","setComponentTypeResolver","override","resolveComponentType","CardItemTypeService","int","float","datetime","bool","keyvaluepairs","CardViewContentProxyDirective","CardViewItemDispatcherComponent","cardItemTypeService","componentReference","method","proxy","loadComponent","changeName","inputParamName","simpleChange","factoryClass","factory","methodName","CardViewItemIntValidator","CardViewItemFloatValidator","isFinite","CardViewBaseItemModel","cardViewItemProperties","default","validators","validator","isValidUntilNow","CardViewBoolItemModel","cardViewBoolItemProperties","CardViewDateItemModel","cardViewDateItemProperties","localizedDatePipe","CardViewDatetimeItemModel","CardViewTextItemModel","cardViewTextItemProperties","pipes","applyPipes","accumulator","CardViewFloatItemModel","CardViewIntItemModel","CardViewMapItemModel","CardViewKeyValuePairsItemModel","cardViewKeyValuePairsItemProperties","CardViewSelectItemModel","cardViewSelectItemProperties","option","CardViewModule","DebugAppConfigService","AppConfigPipe","AppConfigModule","HttpClientModule","FormDefinitionModel","lastUpdatedByFullName","lastUpdated","metadata","reusable","formImageBase64","formRepresentation","lastUpdatedBy","stencilSetId","referenceId","formDefinition","fields","fieldType","numberOfColumns","readOnly","sizeX","sizeY","1","metadataToFields","gridsterForm","javascriptEvents","outcomes","tabs","variables","colspan","existingColspan","maxColspan","layout","FormSaveRepresentation","FormFieldTypes","isReadOnlyType","READONLY_TYPES","isContainerType","CONTAINER","GROUP","DYNAMIC_TABLE","MULTILINE_TEXT","DROPDOWN","HYPERLINK","RADIO_BUTTONS","DISPLAY_VALUE","READONLY_TEXT","UPLOAD","TYPEAHEAD","FUNCTIONAL_GROUP","PEOPLE","BOOLEAN","NUMBER","DATE","AMOUNT","DATETIME","ATTACH_FOLDER","FormWidgetModel","tab","ContainerColumnModel","rowspan","hasFields","ErrorMessageModel","attributes","isActive","getAttributesAsJsonObj","obj_1","RequiredFieldValidator","supportedTypes","isSupported","validate","hasEmptyValue","emptyOption","opt","NumberFieldValidator","isNumber","valueStr","enableFractions","validationSummary","DateFieldValidator","isValidDate","inputDate","dateDisplayFormat","MinDateFieldValidator","minValue","checkDate","fieldValueData","toLocaleUpperCase","MaxDateFieldValidator","MAX_DATE_FORMAT","maxValue","MinDateTimeFieldValidator","MIN_DATETIME_FORMAT","checkDateTime","fieldValueDate","MaxDateTimeFieldValidator","MAX_DATETIME_FORMAT","MinLengthFieldValidator","toLocaleString","MaxLengthFieldValidator","maxLength","MinValueFieldValidator","MaxValueFieldValidator","RegExFieldValidator","regexPattern","FixedValueFieldValidator","hasValidNameOrValidId","hasValidName","hasValidId","hasStringValue","hasOptions","FORM_FIELD_VALIDATORS","FormFieldModel","_readOnly","_isValid","_required","defaultDateFormat","visibilityCondition","currency","overrideId","restUrl","restResponsePath","restIdProperty","restLabelProperty","optionType","hyperlinkUrl","displayText","getDefaultDateFormat","_value","parseValue","processVariables","processVariable","getProcessVariableValue","responseVariable","formVariable","getVariablesValue","containerFactory","updateForm","markAsInvalid","fieldValidators","validators_1","validators_1_1","jsonField","originalType","isTypeaheadFieldType","getFieldNameWithLabel","fieldName","findProcessVariableValue","variableName","variable","currentVariable","currentField","colFields","isDateField","isDateTimeField","dateValue","rbEntry","hasUpload","elem","taEntry","dateTimeValue","isInvalidFieldType","onFormFieldChanged","getOptionName","FormEvent","FormFieldEvent","ValidateFormFieldEvent","ValidateFormEvent","errorsField","ContainerModel","FormOutcomeModel","isSystem","selectedOutcome","SAVE_ACTION","COMPLETE_ACTION","START_PROCESS_ACTION","TabModel","hasContent","FormBaseModel","hasTabs","hasOutcomes","getFieldById","fieldId","getFormFields","formFieldModel","UNSET_TASK_NAME","SAVE_OUTCOME","COMPLETE_OUTCOME","START_PROCESS_OUTCOME","FormModel","formRepresentationJSON","formValues","formService","taskName","customFieldTemplates","taskId","processDefinitionId","tabCache_1","parseRootFields","loadData","saveOutcome","completeOutcome","startProcessOutcome","customOutcomes","validateForm","validateField","formFieldValueChanged","validateFormEvent","validateFieldEvent","validateFormField","formWidgetModel","fields_1","fields_1_1","_c","FormOutcomeEvent","outcome","_outcome","ContentLinkModel","contentAvailable","createdBy","previewStatus","relatedContent","simpleType","thumbnailStatus","hasPreviewStatus","isTypeImage","isTypePdf","isTypeDoc","isThumbnailReady","isThumbnailSupported","EcmModelService","createEcmTypeForActivitiForm","formName","searchActivitiEcmModel","saveFomType","typeForm","createActivitiEcmModel","getEcmModels","ecmModels","MODEL_NAME","createEcmModel","MODEL_NAMESPACE","activeEcmModel","modelActive","createEcmTypeWithProperties","typeCreated","searchEcmType","ecmType","createEcmType","TYPE_MODEL","addPropertyToAType","propertyAdded","typeName","modelName","getEcmType","customTypes","prefixedName","customModelApi","activateCustomModel","toJson","nameSpace","createCustomModel","getAllCustomModel","getAllCustomType","parentType","cleanNameType","createCustomType","formFields","dataType","multiValued","mandatory","mandatoryEnforced","addPropertyToType","cleanName","FormService","ecmModelService","formLoaded","formDataRefreshed","formEvents","taskCompleted","taskCompletedError","taskSaved","taskSavedError","formContentClicked","validateDynamicTableRow","executeOutcome","modelsApi","editorApi","processApi","processInstanceVariablesApi","usersWorkflowApi","parseForm","createFormFromANode","createForm","customType","formDefinitionModel","saveForm","formData","dataModel","modelType","stencilSet","createModel","formId","formModel","searchFrom","getModels","forms","getForms","toJsonArray","getProcessDefinitions","getProcessVariablesById","processInstanceId","getProcessInstanceVariables","getTasks","listTasks","getTask","saveTaskForm","saveFormRepresentation","completeTaskForm","completeFormRepresentation","getTaskForm","getFormDefinitionById","getForm","getFormDefinitionByName","filterText","getFormId","getStartFormInstance","processId","getProcessInstanceStartForm","getProcessInstance","getStartFormDefinition","getProcessDefinitionStartForm","getRestFieldValues","getRestFieldValuesByProcessId","getRestFieldValuesColumnByProcessId","getRestTableFieldValues","getRestFieldValuesColumn","getUserProfileImageApi","userApi","getUserProfilePictureUrl","getWorkflowUsers","groupId","userImage","combineAll","defaultIfEmpty","getWorkflowGroups","getGroups","errMsg","UNKNOWN_ERROR_MESSAGE","statusText","GENERIC_ERROR_MESSAGE","baseHost","(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)","WidgetComponent","fieldChanged","hasField","isRequired","isInvalidFieldRequired","checkVisibility","onFieldChanged","getHyperlinkUrl","DEFAULT_HYPERLINK_URL","DEFAULT_HYPERLINK_SCHEME","getHyperlinkText","ContainerWidgetComponentModel","isExpanded","isCollapsedByDefault","isGroup","isCollapsible","allowCollapse","collapseByDefault","ContainerWidgetComponent","onExpanderClicked","rowContainsElement","rowIndex","getColumnWith","TabsWidgetComponent","formTabChanged","visibleTabs","ngAfterContentChecked","filterVisibleTabs","tabChanged","UnknownWidgetComponent","AmountWidgetComponent","DEFAULT_CURRENCY","CheckboxWidgetComponent","DateWidgetComponent","minDate","maxDate","displayDate","ɵ0$1","DisplayTextWidgetComponentComponent","DocumentWidgetComponent","fileId","hasFile","DropdownWidgetComponent","getValuesByTaskId","getValuesByProcessDefinitionId","formFieldOption","getOptionValue","fieldValue","WidgetVisibilityService","refreshVisibility","tabModel","refreshEntityVisibility","evaluateVisibility","visibilityObj","isLeftFieldPresent","leftFormFieldId","leftRestResponseId","isFieldVisible","leftValue","getLeftValue","rightValue","getRightValue","actualResult","evaluateCondition","operator","nextConditionOperator","nextCondition","evaluateLogicalOperation","getVariableValue","processVarList","getFormValue","rightRestResponseId","rightFormFieldId","getFieldValue","searchValueInForm","valueList","dropDownFilterByName","valueFound","formField","isSearchedField","getObjectValue","getValueFromOption","fieldToFind","formattedFieldName","removeLabel","getFormVariableValue","identifier","getFormVariables","formVar","logicOp","cleanProcessVariable","getTaskProcessVariable","taskFormsApi","getTaskFormVariables","jsonRes","ValidateDynamicTableRowEvent","summary","DateCellValidator","DynamicRowValidationSummary","NumberCellValidator","RequiredCellValidator","DynamicTableModel","visibleColumns","_validators","_selectedRow","definitions","columnDefinitions","flushValue","moveRow","offset","oldIndex","newIndex","arr","deleteRow","selectedRow","addRow","validateRow","_d","_e","_f","getCellValue","rowValue","getDisplayText","columnName","amountCurrency","DynamicTableWidgetComponent","visibilityService","cd","ERROR_MODEL_NOT_FOUND","editMode","editRow","selectArrayCode","forceFocusOnAddButton","buttonAddRow","isDynamicTableReady","focus","onRowClicked","onKeyPressed","isEnterOrSpacePressed","hasSelection","moveSelectionUp","moveSelectionDown","deleteSelection","addNewRow","isNew","editSelection","copyRow","cellValue","onSaveChanges","copyObject","onCancelChanges","BooleanEditorComponent","DateEditorComponent","table","ɵ0$2","ɵ1$1","DateTimeEditorComponent","DATE_TIME_FORMAT","ɵ0$3","DropdownEditorComponent","dynamicTableColumnOption","RowEditorComponent","TextEditorComponent","ErrorWidgetComponent","translateParameters","_subscriptAnimationState","FunctionalGroupWidgetComponent","minTermLength","restrictWithGroup","groupModel","onKeyUp","oldValue","ESCAPE","onItemClick","onItemSelect","HyperlinkWidgetComponent","linkUrl","linkText","MultilineTextWidgetComponentComponent","NumberWidgetComponent","PeopleProcessService","alfrescoJsApi","searchWord","excludeTaskId","getWorkflowUserApi","getUserImage","involveUserWithTask","idToInvolve","involveUserToTaskApi","removeInvolvedUser","idToRemove","removeInvolvedUserFromTaskApi","taskActionsApi","involveUser","PeopleWidgetComponent","peopleProcessService","searchTerm","searchTerms$","users$","checkUserAndValidateForm","peopleSelected","setValue","isValidUser","selectedUser","RadioButtonsWidgetComponent","getOptionsByTaskId","getOptionsByProcessDefinitionId","onOptionClick","optionSelected","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputMaskDirective","multi","translationMask","0","9","optional","#","recursive","A","S","byPassKeys","invalidCharacters","_onChange","_onTouched","onTextInput","inputMask","mask","maskValue","selectionStart","isReversed","writeValue","registerOnChange","fn","registerOnTouched","actualValue","startCaret","maskToApply","isMaskReversed","getMasked","calculatedCaret","calculateCaretPosition","setCaretPosition","caretPosition","moveStart","moveEnd","newValueLength","oldValueLength","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","check","buf","maskIndex","maskLen","valueIndex","valueLength","addMethod","resetPos","isToCheck","maskDigit","charAt","valDigit","digit","lastMaskCharDigit","TextWidgetComponent","TypeaheadWidgetComponent","toSelect","isValidOptionName","optionName","isValueDefined","ProcessContentService","createTemporaryRawRelatedContent","contentId","getContent","getFileRawContent","getRawContent","getContentPreview","getFileRawContentUrl","getRawContentUrl","getContentThumbnail","getTaskRelatedContent","getRelatedContentForTask","getProcessRelatedContent","getRelatedContentForProcessInstance","deleteRelatedContent","deleteContent","createProcessRelatedContent","createRelatedContentOnProcessInstance","createTaskRelatedContent","createRelatedContentOnTask","UploadWidgetComponent","processContentService","multipleOption","getMultipleFileParam","removeFile","removeElementFromList","onFileChanged","filesSaved","uploadRawContent","contentBlob","resetFormValueWithNoFiles","getIcon","fileClicked","contentLinkModel","fetch","ɵ1$2","DateTimeWidgetComponent","ɵ0$4","WIDGET_DIRECTIVES","MASK_DIRECTIVE","FormBaseComponent","showTitle","showCompleteButton","disableCompleteButton","disableSaveButton","disableStartProcessButton","showSaveButton","showRefreshButton","showValidationIcon","getParsedFormDefinition","hasForm","isTitleEnabled","titleEnabled","getColorForOutcome","outcomeName","COMPLETE_OUTCOME_NAME","COMPLETE_BUTTON_COLOR","isOutcomeButtonEnabled","isOutcomeButtonVisible","isFormReadOnly","onOutcomeClicked","onExecuteOutcome","SAVE_OUTCOME_ID","COMPLETE_OUTCOME_ID","START_PROCESS_OUTCOME_ID","CUSTOM_OUTCOME_ID","onTaskSaved","storeFormAsMetadata","FormListComponent","ContentWidgetComponent","showDocumentContent","contentClick","thumbnailLoaded","contentLoaded","loadContent","loadThumbnailUrl","observable","thumbnailUrl","openViewer","FormRendererComponent","showDebugButton","ActivitiContentService","getAlfrescoNodes","accountId","folderId","accountShortId","getContentInFolder","getAlfrescoRepositories","includeAccount","includeAccounts","getRepositories","linkAlfrescoNode","siteId","createTemporaryRelatedContent","sourceId","applyAlfrescoNode","currentSideId","getSiteNameFromNodePath","siteName","foundNode","pathNode","nodeType","FormRenderingService","string","integer","multi-line-text","boolean","dropdown","amount","radio-buttons","hyperlink","readonly-text","typeahead","people","functional-group","dynamic-table","NodeMetadata","NodeService","getNodeMetadata","cleanMetadataFromSemicolon","createNodeMetadata","createNode","relativePath","addNode","FormErrorEvent","StartFormCustomButtonDirective","FormFieldComponent","formRenderingService","componentFactoryResolver","compiler","w","adf","originalField","getField","customTemplate","hasController","getComponentFactorySync","componentRef","componentType","wrappedField","components","componentInfo","createComponentFactorySync","componentClass","cmpClass","RuntimeComponent","decoratedCmp","RuntimeComponentModule","compileModuleAndAllComponentsSync","componentFactories","focusToggle","Compiler","read","FormBaseModule","SidenavLayoutContentDirective","SidenavLayoutHeaderDirective","SidenavLayoutNavigationDirective","SidenavLayoutComponent","mediaMatcher","dir","hideSidenav","expanded","templateContext","toggleMenu","isMenuMinimized","onDestroy$","onMediaQueryChange","initialMenuState","menuOpenStateSubject","menuOpenState$","stepOver","STEP_OVER","mediaQueryList","matchMedia","addListener","takeUntil","removeListener","matches","_isMenuMinimized","menuState","headerDirective","emptyTemplate","navigationDirective","contentDirective","MediaMatcher","sidenavAnimation","contentAnimation","margin-left","margin-right","LayoutContainerComponent","SIDENAV_STATES","MOBILE","EXPANDED","COMPACT","CONTENT_STATES","sidenavMax","sidenavMin","isMobileScreenSize","sidenavAnimationState","contentAnimationState","toggledContentAnimation","sidenav","toggledSidenavAnimation","getContentAnimationState","MatSidenav","SidebarActionMenuComponent","SidebarMenuDirective","SidebarMenuTitleIconDirective","SidebarMenuExpandIconDirective","HeaderLayoutComponent","showSidenavToggle","logo","LayoutModule","CommentListComponent","clickRow","selectComment","comment","selectedComment","getUserShortName","shortName","isPictureDefined","isAContentUsers","CommentModel","UserProcessModel","CommentProcessService","addTaskComment","getTaskComments","comments","getProcessInstanceComments","commentsApi","addProcessInstanceComment","CommentContentService","addNodeComment","addComment","createdAt","getNodeComments","getComments","CommentsComponent","commentProcessService","commentContentService","beingAdded","comment$","commentObserver","resetComments","isATask","comment1","comment2","date1","date2","currentComment","isANode","sanitize","unshift","CommentsModule","ButtonsMenuComponent","buttons","isMenuEmpty","isMobile","userAgent","ButtonsMenuModule","SortingPickerComponent","ascending","valueChange","sortingChange","onOptionChanged","toggleSortDirection","SortingPickerModule","ErrorContentComponent","secondaryButtonUrl","returnButtonUrl","UNKNOWN_ERROR","checkErrorExists","getTranslations","hasSecondButton","onSecondButton","onReturnButton","EmptyContentComponent","subtitle","TemplateModule","AuthGuardBase","authenticationService","canActivate","checkLogin","canActivateChild","redirectToUrl","urlToRedirect","getLoginRoute","isOAuthWithoutSilentLogin","AuthGuard","ticketChangeBind","ticketChange","ticketChangeRedirect","reload","activeRoute","AuthGuardEcm","AuthGuardBpm","AuthGuardSsoRoleService","hasRealmRole","hasClientRole","rolesToCheck","hasRealmRoles","clientRoleName","hasRealmRolesForClientRole","getRealmRoles","access","client","clientRole","getAccessToken","currentRole","AppsProcessService","getDeployedApplications","appsApi","getAppDefinitions","getDeployedApplicationsByName","app","getApplicationDetailsById","appId","PageTitleService","titleService","originalTitle","translatedTitle","onLangChange","onLanguageChanged","setTitle","updateTitle","Title","RenditionsService","getAvailableRenditionForNode","availableRenditions","renditionsAvailable","existingRendition","rend","generateRenditionForNode","empty","isRenditionAvailable","encoding","isAvailable","isConversionPossible","getRenditionsListByNodeId","convert","pollingInterval","concatMap","pollRendition","intervalSize","attempts","interval","takeWhile","ComponentTranslationModel","TranslateLoaderService","suffix","queue","registered","fetchLanguageFile","component","fallbackUrl","translationUrl","retry","langId","getComponentToFetch","observableBatch","isComponentInQueue","hasFailures","fullTranslation","UploadService","cache","excludedFileList","matchingOptions","activeTask","queueChanged","fileUpload","fileUploadStarting","fileUploadCancelled","fileUploadProgress","fileUploadAborted","fileUploadError","fileUploadComplete","fileUploadDeleted","fileDeleted","isUploading","getQueue","addToQueue","allowedFiles","currentFile","filterElement","isAllowed","Minimatch","uploadFilesInTheQueue","emitter","onUploadStarting","beginUpload","next_1","cancelUpload","abort","getAction","performAction","clearQueue","getUploadPromise","renditions","overwrite","autoRename","updateNodeContent","uploadFile","parentId","onUploadProgress","onUploadAborted","onUploadError","onUploadComplete","event_2","event_3","event_4","event_5","onUploadCancelled","event_6","onUploadDeleted","event_7","DeletedNodesApiService","preferences","defaultOptions","queryOptions","FavoritesApiService","remapEntry","cm:title","cm:description","remapFavoritesData","remapFavoriteEntries","getFavorites","personId","where","NodesApiService","api","getEntryFromEntity","entity","getNodeChildren","parentNodeId","nodeBody","createFolder","updateNode","PeopleContentService","getCurrentPerson","SearchConfigurationService","generateQueryBody","maxResults","paging","filterQueries","SearchService","searchConfigurationService","dataLoaded","getNodeQueryResults","term","queriesApi","findNodes","nodePaging","searchQuery","searchByQueryBody","queryBody","SharedLinksApiService","getSharedLinks","findSharedLinks","createSharedLinks","addSharedLink","deleteSharedLink","SitesService","getSites","getSite","deleteSite","permanentFlag","getSiteContent","relations","getSiteMembers","getEcmCurrentLoggedUserName","LoginDialogService","openLogin","openLoginDialog","currentPanelClass","chosenWidth","closeAll","ExternalAlfrescoApiService","domainPrefix","createPrefixFromHost","LockService","hasLockConfigured","isReadOnlyLock","isLockExpired","isLockOwnerAllowed","getLockExpiryTime","expiryLockTime","DemoForm","easyForm","endpoint","requestHeaders","customFieldsValueInfo","globalDateFormat","2","fileSource","serviceId","metaDataColumnDefinitions","folderSource","metaDataAllowed","amountEnableFractions","simpleFormDefinition","cloudFormDefinition","inputMaskReversed","inputMaskPlaceholder","property1","property2","getEasyForm","getFormDefinition","getSimpleFormDefinition","getFormCloudDefinition","CoreAutomationService","setup","adfProxy","setConfigField","setStorageItem","setUserPreference","setFormInEditor","setCloudFormInEditor","clearStorage","apiReset","DialogModule","IconComponent","_isCustom","IconModule","NotificationHistoryComponent","notifications","isEmptyNotification","markAsRead","NotificationHistoryModule","EcmCompanyModel","RedirectionModel","PaginationModel","RequestPaginationModel","AlfrescoApiMock","changeConfig","AppConfigServiceMock","AuthenticationMock","setRedirectUrl","getRedirectUrl","fakeBpmUserNoImage","fakeUser1","fakeTasksComment","fakeProcessComment","CookieServiceMock","EventMock","keyDown","createEvent","initEvent","keyUp","resizeMobileView","Event","fakeSearch","mimetype","createdByUser","modifiedByUser","searchMockApi","TranslationMock","AlfrescoApiServiceMock","formTest","resetTestingModule","TestBed","startupServiceFactory","directionalityConfigFactory","directionalityConfigService","DirectionalityConfigService","rendererFactory","directionality","createRenderer","RendererFactory2","Directionality","CoreModule","forRoot","ngModule","TranslateStore","TranslateLoader","APP_INITIALIZER","useFactory","deps","SidenavLayoutModule","defaultAppId","modelId","theme","deploymentId","organization","address1","address2","address3","postcode","fax","mimeTypeName","errorKey","briefSummary","stackTrace","descriptionURL","processDefinitionName","processDefinitionKey","taskDefinitionKey","rightType","test_1","test_2","test_3","test_4","test_5","moduleDef","beforeAll","sessionStorage","configureTestingModule","compileComponents","afterAll"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        const keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            const value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        const result = {};\n\n        objects.forEach((source) => {\n            Object.keys(source).forEach((prop) => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\n/* spellchecker: disable */\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    IDENTITY_HOST = 'identityHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF',\n    AUTH_WITH_CREDENTIALS = 'auth.withCredentials',\n    APPLICATION = 'application',\n    NOTIFY_DURATION = 'notificationDefaultDuration'\n}\n\nexport enum Status {\n    INIT = 'init',\n    LOADING = 'loading',\n    LOADED = 'loaded'\n}\n\n/* spellchecker: enable */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    status: Status = Status.INIT;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(async (resolve) => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            if (this.status === Status.INIT) {\n                this.status = Status.LOADING;\n                await this.http.get(configUrl).subscribe(\n                    (data: any) => {\n                        this.status = Status.LOADED;\n                        this.config = Object.assign({}, this.config, data || {});\n                        this.onLoadSubject.next(this.config);\n                        resolve(this.config);\n                    },\n                    () => {\n                        resolve(this.config);\n                    }\n                );\n            } else if (this.status === Status.LOADED) {\n                resolve(this.config);\n            } else if (this.status === Status.LOADING) {\n                this.onLoad.subscribe(() => {\n                    resolve(this.config);\n                });\n            }\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentApi,\n    Core,\n    Activiti,\n    SearchApi,\n    Node\n} from '@alfresco/js-api';\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<Node>();\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    lastConfig: AlfrescoApiConfig;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): Activiti.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): Core.RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): Core.SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): Core.SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): Core.FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): Core.PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): Core.VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): Core.ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): Core.GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(protected appConfig: AppConfigService) {\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.initAlfrescoApi();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        const oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n\n        if (this.alfrescoApi && this.isDifferentConfig(this.lastConfig, config)) {\n            this.lastConfig = config;\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.lastConfig = config;\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n\n    }\n\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig) {\n        return JSON.stringify(lastConfig) !== JSON.stringify(newConfig);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    get currentLogLevel() {\n        const configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        const referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelperService {\n\n    static USER_NAME = 'name';\n    static FAMILY_NAME = 'family_name';\n    static GIVEN_NAME = 'given_name';\n    static USER_EMAIL = 'email';\n    static USER_ACCESS_TOKEN = 'access_token';\n    static USER_PREFERRED_USERNAME = 'preferred_username';\n\n    constructor() {\n    }\n\n    /**\n     * Decodes a JSON web token into a JS object.\n     * @param token Token in encoded form\n     * @returns Decoded token data object\n     */\n    decodeToken(token): Object {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private urlBase64Decode(token): string {\n        let output = token.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return decodeURIComponent(escape(window.atob(output)));\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromLocalAccessToken<T>(key: string): T {\n        const accessToken = localStorage.getItem(JwtHelperService.USER_ACCESS_TOKEN);\n        return this.getValueFromToken(accessToken, key);\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key accessToken\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromToken<T>(accessToken: string, key: string): T {\n        let value;\n        if (accessToken) {\n            const tokenPayload = this.decodeToken(accessToken);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from './jwt-helper.service';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n        if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n            return false;\n        }\n        return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap((response) => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        const ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @returns The redirect URL\n     */\n    getRedirect(): string {\n        const provider = <string> this.appConfig.get(AppConfigValues.PROVIDERS);\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Gets the set of URLs that the token bearer is excluded from.\n     * @returns Array of URL strings\n     */\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    /**\n     * Gets the auth token.\n     * @returns Auth token string\n     */\n    getToken(): string {\n        return localStorage.getItem(JwtHelperService.USER_ACCESS_TOKEN);\n    }\n\n    /**\n     * Adds the auth token to an HTTP header using the 'bearer' scheme.\n     * @param headersArg Header that will receive the token\n     * @returns The new header with the token added\n     */\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return new Observable((observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n\n    /**\n     * Checks if SSO is configured correctly.\n     * @returns True if configured correctly, false otherwise\n     */\n    isSSODiscoveryConfigured() {\n        return this.alfrescoApi.getInstance().storage.getItem('discovery') ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map((res) => new EcmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map((res) => new BpmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: any;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flatten(folder: any): Promise<FileInfo[]> {\n        const reader = folder.createReader();\n        const files: FileInfo[] = [];\n        return new Promise((resolve) => {\n            const iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(() => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map((entry) => {\n                            if (entry.isFile) {\n                                return new Promise((resolveFile) => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flatten(entry).then((result) => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        const result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplayFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map((month) => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        const locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        const locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        const locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplayFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplayFormat ? this.overrideDisplayFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        const locale = this.locale || 'en';\n        const d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n    copyContent?: boolean;\n\n    constructor(input: any) {\n        this.key = input.key;\n        this.type = input.type || 'text';\n        this.format = input.format;\n        this.sortable = input.sortable;\n        this.title = input.title;\n        this.srTitle = input.srTitle;\n        this.cssClass = input.cssClass;\n        this.template = input.template;\n        this.copyContent = input.copyContent;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        const schema = [];\n\n        if (data && data.length) {\n            const rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (const key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map((item) => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map((item) => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            const sortable = this._columns.filter((column) => column.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        const value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Observable } from 'rxjs';\nimport { ExtensionRef, AppExtensionService } from '@alfresco/adf-extensions';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    extensionColumns: string[] = ['$id', '$name', '$version', '$vendor', '$license', '$runtime', '$description'];\n    extensions$: Observable<ExtensionRef[]>;\n\n    /** Commit corresponding to the version of ADF to be used. */\n    @Input()\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    /** Toggles showing/hiding of extensions block. */\n    @Input()\n    showExtensions = true;\n\n    /** Regular expression for filtering dependencies packages. */\n    @Input() regexp = '^(@alfresco)';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService,\n                appExtensions: AppExtensionService) {\n        this.extensions$ = appExtensions.references$;\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },\n                    { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'installDate',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'installState',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMin',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMax',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX',\n                        sortable: true\n                    }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isAuditEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isQuickShareEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isThumbnailGenerationEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED',\n                        sortable: true\n                    }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'remainingDays',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS',\n                        sortable: true\n                    },\n                    { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },\n                    { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isClusterEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isCryptodocEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED',\n                        sortable: true\n                    }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('/versions.json?' + new Date()).subscribe((response: any) => {\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return new RegExp(this.regexp).test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: (response.dependencies[val].version || response.dependencies[val].required.version)\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe((mouseEvent) => this.showMenu(mouseEvent.event, mouseEvent.obj)),\n\n            this.menuTrigger.onMenuOpen.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (contextmenuEvent: Event) => {\n                        contextmenuEvent.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.onMenuClose.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(mouseEvent, links) {\n        this.links = links;\n\n        if (mouseEvent) {\n            this.mouseLocation = {\n                left: mouseEvent.clientX,\n                top: mouseEvent.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuOverlayService {\n\n    constructor(\n        private injector: Injector,\n        private overlay: Overlay\n    ) {}\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('adf-context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('adf-context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n    storagePrefix: string;\n\n    constructor(private appConfigService: AppConfigService) {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n        this.appConfigService.onLoad.subscribe(this.getAppPrefix.bind(this));\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key);\n        } else {\n            return this.memoryStore.hasOwnProperty(this.storagePrefix + key) ? this.memoryStore[this.storagePrefix + key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(this.storagePrefix + key, data);\n        } else {\n            this.memoryStore[this.storagePrefix + key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(this.storagePrefix + key);\n        } else {\n            delete this.memoryStore[this.storagePrefix + key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            const storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Sets the prefix that is used for the local storage of the app\n     * It assigns the string that is defined i the app config,\n     * empty prefix otherwise.\n     */\n    getAppPrefix() {\n        const appConfiguration = this.appConfigService.get<any>('application');\n        if (appConfiguration && appConfiguration.storagePrefix) {\n            this.storagePrefix = appConfiguration.storagePrefix + '_';\n        } else {\n            this.storagePrefix = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { LanguageItem } from '../language-menu/language.interface';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'paginationSize',\n    Locale = 'locale',\n    SupportedPageSizes = 'supportedPageSizes',\n    ExpandedSideNavStatus = 'expandedSidenav'\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en',\n        expandedSidenav: true\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService) {\n        this.appConfig.onLoad.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.initUserLanguage();\n        this.set(UserPreferenceValues.PaginationSize, this.paginationSize);\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(this.supportedPageSizes));\n    }\n\n    private initUserLanguage() {\n        if (this.locale || this.appConfig.get<string>(UserPreferenceValues.Locale)) {\n            const locale = this.locale || this.getDefaultLocale();\n\n            this.set(UserPreferenceValues.Locale, locale);\n            this.set('textOrientation', this.getLanguageByKey(locale).direction || 'ltr');\n        } else {\n            const locale = this.locale || this.getDefaultLocale();\n\n            this.setWithoutStore(UserPreferenceValues.Locale, locale);\n            this.setWithoutStore('textOrientation', this.getLanguageByKey(locale).direction || 'ltr');\n        }\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    setWithoutStore(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n        this.initUserPreferenceStatus();\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    get supportedPageSizes(): number[] {\n        const supportedPageSizes = this.get(UserPreferenceValues.SupportedPageSizes);\n\n        if (supportedPageSizes) {\n            return JSON.parse(supportedPageSizes);\n        } else {\n            return this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n        }\n    }\n\n    set supportedPageSizes(value: number[]) {\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(value));\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        const paginationSize = this.get(UserPreferenceValues.PaginationSize);\n\n        if (paginationSize) {\n            return Number(paginationSize);\n        } else {\n            return Number(this.appConfig.get('pagination.size', this.defaults.paginationSize));\n        }\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        return this.get(UserPreferenceValues.Locale);\n    }\n\n    set locale(value: string) {\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>(UserPreferenceValues.Locale) || this.translate.getBrowserCultureLang() || 'en';\n    }\n\n    private getLanguageByKey(key: string): LanguageItem {\n        return (\n            this.appConfig\n                .get<Array<LanguageItem>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY, [<LanguageItem> { key: 'en' }])\n                .find((language) => key.includes(language.key)) || <LanguageItem> { key: 'en' }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService, UserPreferenceValues } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreferencesService: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n        this.customLoader.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (const provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            if (locale) {\n                this.userLang = locale;\n                this.use(this.userLang);\n            }\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    /**\n     * Loads a translation file.\n     * @param lang Language code for the language to load\n     * @param fallback Language code to fall back to if the first one was unavailable\n     */\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class PermissionsEnum extends String {\n    static CONTRIBUTOR: string = 'Contributor';\n    static CONSUMER: string = 'Consumer';\n    static COLLABORATOR: string = 'Collaborator';\n    static MANAGER: string = 'Manager';\n    static EDITOR: string = 'Editor';\n    static COORDINATOR: string = 'Coordinator';\n    static NOT_CONTRIBUTOR: string = '!Contributor';\n    static NOT_CONSUMER: string = '!Consumer';\n    static NOT_COLLABORATOR: string = '!Collaborator';\n    static NOT_MANAGER: string = '!Manager';\n    static NOT_EDITOR: string = '!Editor';\n    static NOT_COORDINATOR: string = '!Coordinator';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class AllowableOperationsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError } from 'rxjs/operators';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n\n    private saveData: Function;\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNode> = new Subject<MinimalNode>();\n    folderEdit: Subject<MinimalNode> = new Subject<MinimalNode>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer) {\n        this.saveData = (function () {\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (fileData, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([fileData], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    const json = JSON.stringify(fileData);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        const url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        const url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getContentUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JS-API\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permission on that node\n     * @param node Node to check permissions\n     * @param permission Required permission type\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermissions(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermissions = false;\n\n        if (node && node.permissions && node.permissions.locallySet) {\n            if (permission && permission.startsWith('!')) {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission) ? true : false;\n            }\n\n        } else {\n\n            if (permission === PermissionsEnum.CONSUMER) {\n                hasPermissions = true;\n            } else if (permission === PermissionsEnum.NOT_CONSUMER) {\n                hasPermissions = false;\n            } else if (permission && permission.startsWith('!')) {\n                hasPermissions = true;\n            }\n        }\n\n        return hasPermissions;\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param allowableOperation Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean {\n        let hasAllowableOperations = false;\n\n        if (node && node.allowableOperations) {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation.replace('!', '')) ? false : true;\n            } else {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation) ? true : false;\n            }\n\n        } else {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = true;\n            }\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.COPY) {\n            hasAllowableOperations = true;\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.LOCK) {\n            hasAllowableOperations = node.isFile;\n\n            if (node.isLocked && node.allowableOperations) {\n                hasAllowableOperations = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasAllowableOperations;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentService } from './content.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'text/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'ruleFolder': './assets/images/ft_ic_folder_rule.svg',\n        'linkFolder': './assets/images/ft_ic_folder_shortcut_link.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(public contentService: ContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach((key) => {\n            const url = sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]);\n\n            matIconRegistry.addSvgIcon(key, url);\n            matIconRegistry.addSvgIconInNamespace('adf', key, url);\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns URL string\n     */\n    public getDocumentThumbnailUrl(node: any): string {\n        const thumbnail = this.contentService.getDocumentThumbnailUrl(node);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        const icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: NodeEntry): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: NodeEntry): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport interface HighlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'adf-highlight'): HighlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(/<[^>]+>/g, '').replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return highlightTransformResult.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { UserPreferenceValues, UserPreferencesService } from '../services/user-preferences.service';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_DATE_TIME_FORMAT = 'dd/MM/yyyy HH:mm';\n\n    defaultLocale: string;\n    defaultDateTimeFormat: string;\n\n    constructor(public userPreferenceService: UserPreferencesService,\n                public appConfig: AppConfigService) {\n        this.userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.defaultLocale = locale || TimeAgoPipe.DEFAULT_LOCALE;\n        });\n        this.defaultDateTimeFormat = this.appConfig.get<string>('dateValues.defaultDateTimeFormat', TimeAgoPipe.DEFAULT_DATE_TIME_FORMAT);\n    }\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale || this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            if ( diff > 7) {\n                const datePipe: DatePipe = new DatePipe(actualLocale);\n                return datePipe.transform(value, this.defaultDateTimeFormat);\n            } else {\n                return then.locale(actualLocale).fromNow();\n            }\n        }\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let safeHtml: SafeHtml = '';\n        if (user) {\n            const initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return safeHtml;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fullName' })\nexport class FullNamePipe implements PipeTransform {\n    transform(user: any): string {\n        let fullName = '';\n        if (user) {\n            if (user.firstName) {\n                fullName += user.firstName;\n            }\n            if (user.lastName) {\n                fullName += fullName.length > 0 ? ' ' : '';\n                fullName += user.lastName;\n            }\n        }\n        return fullName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatSpace'\n})\nexport class FormatSpacePipe implements PipeTransform {\n\n    transform(inputValue: string, replaceChar: string = '_', lowerCase: boolean = true): string {\n        let transformedString = '';\n        if (inputValue) {\n            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :\n                inputValue.trim().split(' ').join(replaceChar);\n        }\n        return transformedString;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'fileType',\n    pure: true\n})\nexport class FileTypePipe implements PipeTransform {\n\n    transform(value: string) {\n\n        if ( value == null || value === undefined ) {\n            return '';\n        } else {\n            const fileInfo = value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '');\n            return fileInfo.split('_').pop();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'multiValue' })\nexport class MultiValuePipe implements PipeTransform {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    transform(values: string | string [], valueSeparator: string = MultiValuePipe.DEFAULT_SEPARATOR): string {\n\n        if (values && values instanceof Array) {\n            const valueList = values.map((value) => value.trim());\n            return valueList.join(valueSeparator);\n        }\n\n        return <string> values;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Pipe({\n    name: 'adfLocalizedDate',\n    pure: false\n})\nexport class LocalizedDatePipe implements PipeTransform {\n\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_DATE_FORMAT = 'mediumDate';\n\n    defaultLocale: string = LocalizedDatePipe.DEFAULT_LOCALE;\n    defaultFormat: string = LocalizedDatePipe.DEFAULT_DATE_FORMAT;\n\n    constructor(public userPreferenceService?: UserPreferencesService,\n                public appConfig?: AppConfigService) {\n\n        if (this.userPreferenceService) {\n            this.userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n                if (locale) {\n                    this.defaultLocale = locale;\n                }\n            });\n        }\n\n        if (this.appConfig) {\n            this.defaultFormat = this.appConfig.get<string>('dateValues.defaultDateFormat', LocalizedDatePipe.DEFAULT_DATE_FORMAT);\n        }\n    }\n\n    transform(value: any, format?: string, locale?: string): any {\n        const actualFormat = format || this.defaultFormat;\n        const actualLocale = locale || this.defaultLocale;\n        const datePipe: DatePipe = new DatePipe(actualLocale);\n        return datePipe.transform(value, actualFormat);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\nimport { FullNamePipe } from './full-name.pipe';\nimport { FormatSpacePipe } from './format-space.pipe';\nimport { FileTypePipe } from './file-type.pipe';\nimport { MultiValuePipe } from './multi-value.pipe';\nimport { LocalizedDatePipe } from './localized-date.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2, AfterViewChecked } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective implements AfterViewChecked {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) {\n    }\n\n    ngAfterViewChecked() {\n        this.highlight();\n    }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (highlightTransformResult.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** URI to redirect to after logging out. */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirecting after logout */\n    @Input()\n    enableRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enableRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { NodeEntry, Node, DeletedNodeEntity, DeletedNode } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: Node | DeletedNode;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: NodeEntry[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-check-allowable-operation')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: NodeEntry[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: NodeEntry | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt') && node.entry['archivedAt']) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, NodeEntry, SharedLinkEntry, Node, SharedLink } from '@alfresco/js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: NodeEntry[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting fails. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected: NodeEntry | SharedLinkEntry) => {\n                // shared files have nodeId\n                const id = (<SharedLinkEntry> selected).entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map((selected) => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                (error) => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map((selected) => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    (error) => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: NodeEntry[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe((data) => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: NodeEntry) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: NodeEntry | SharedLinkEntry): Observable<any> {\n        const node: Node | SharedLink = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = <Node> node;\n        const id =  (<SharedLink> node).nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map((item) => item.entry.id);\n\n        return list.filter((item) => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map((item) => item.entry.id);\n\n        return patch.filter((item) => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodeAllowableOperationSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-check-allowable-operation]'\n})\nexport class CheckAllowableOperationDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-check-allowable-operation')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: NodeEntry[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodeAllowableOperationSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    updateElement(): boolean {\n        const enable = this.hasAllowableOperations(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof CheckAllowableOperationDirective\n     */\n    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every((node) => this.contentService.hasAllowableOperations(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap((restoredNodes) => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe((deletedNodesList) => {\n                const { entries: nodeList } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodeList);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map((item) => item.entry.id);\n\n        return list.filter((item) => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        const message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            const inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', (event) => this.onSelectFiles(event));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTransfer = this.getDataTransfer(event);\n            if (dataTransfer) {\n                this.getFilesDropped(dataTransfer).then((files) => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            const customEvent = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(customEvent);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise((resolve) => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            const item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise((resolveFolder) => {\n                                        FileUtils.flatten(item).then((files) => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    const files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map((file) => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then((result) => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param event DOM event\n     */\n    onSelectFiles(event: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> event.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map((file) => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            event.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, DownloadEntry, DownloadBodyCreate } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { LogService } from './log.service';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadZipService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates a new download.\n     * @param payload Object containing the node IDs of the items to add to the ZIP file\n     * @returns Status object for the download\n     */\n    createDownload(payload: DownloadBodyCreate): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.createDownload(payload)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param nodeId Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @returns URL string\n     */\n    getContentUrl(nodeId: string, attachment?: boolean): string {\n        return this.apiService.getInstance().content.getContentUrl(nodeId, attachment);\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @returns Details of the node\n     */\n    getNode(nodeId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().core.nodesApi.getNode(nodeId));\n    }\n\n    /**\n     * Gets status information for a download node.\n     * @param downloadId ID of the download node\n     * @returns Status object for the download\n     */\n    getDownload(downloadId: string): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.getDownload(downloadId));\n    }\n\n    /**\n     * Cancels a download.\n     * @param downloadId ID of the target download node\n     */\n    cancelDownload(downloadId: string) {\n        this.apiService.getInstance().core.downloadsApi.cancelDownload(downloadId);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, NodeEntry } from '@alfresco/js-api';\nimport { LogService } from '../services/log.service';\nimport { DownloadZipService } from '../services/download-zip.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    cancelled = false;\n    downloadId: string;\n\n    constructor(private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any,\n                private logService: LogService,\n                private downloadZipService: DownloadZipService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.downloadZipService.cancelDownload(this.downloadId);\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            this.downloadZipService.createDownload({ nodeIds }).subscribe((data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.downloadZipService.getContentUrl(data.entry.id, true);\n\n                    this.downloadZipService.getNode(data.entry.id).subscribe((downloadNode: NodeEntry) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.downloadId = data.entry.id;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadZipService.getDownload(downloadId).subscribe((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\nimport { NodeEntry } from '@alfresco/js-api';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-node-download], [adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: NodeEntry | NodeEntry[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: NodeEntry | Array<NodeEntry>) {\n\n        if (!this.isSelectionValid(selection)) {\n            return;\n        }\n        if (selection instanceof Array) {\n            if (selection.length === 1) {\n                this.downloadNode(selection[0]);\n            } else {\n                this.downloadZip(selection);\n            }\n        } else {\n            this.downloadNode(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: NodeEntry) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private isSelectionValid(selection: NodeEntry | Array<NodeEntry>) {\n        return selection || (selection instanceof Array && selection.length > 0);\n    }\n\n    private downloadFile(node: NodeEntry) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<NodeEntry>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { CheckAllowableOperationDirective } from './check-allowable-operation.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\nimport { NodeDownloadDirective } from './node-download.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultCell\"\n                adf-clipboard=\"CLIPBOARD.CLICK_TO_COPY\"\n                [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\"\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n                >{{ value$ | async }}</span>\n        </ng-container>\n        <ng-template #defaultCell>\n            <span\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n            >{{ value$ | async }}</span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class DataTableCellComponent implements OnInit, OnDestroy {\n    /** Data table adapter instance. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Data that defines the column. */\n    @Input()\n    column: DataColumn;\n\n    /** Data that defines the row. */\n    @Input()\n    row: DataRow;\n\n    value$ = new BehaviorSubject<any>('');\n\n    /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n    @Input()\n    copyContent: boolean;\n\n    /** Text for the cell's tooltip. */\n    @Input()\n    tooltip: string;\n\n    private sub: Subscription;\n\n    constructor(protected alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe((node: Node) => {\n            if (this.row) {\n                if (this.row['node'].entry.id === node.id) {\n                    this.row['node'].entry = node;\n                    this.row['cache'][this.column.key] = this.column.key.split('.').reduce((source, key) => source[key], node);\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const value = this.data.getValue(this.row, this.column);\n\n            this.value$.next(value);\n\n            if (!this.tooltip) {\n                this.tooltip = value;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize', 'location', and 'json'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n     /** Enables/disables a Clipboard directive to allow copying of cell contents. */\n    @Input()\n    copyContent: boolean;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssociationBody } from '@alfresco/js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport class FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssociationBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    errorCode: number;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n        this.errorCode = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable' }\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>((observer) => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        const changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map((row) => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        const singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        const multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, mouseEvent: MouseEvent) {\n        if (mouseEvent) {\n            mouseEvent.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach((r) => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, event?: Event) {\n        if (event) {\n            event.preventDefault();\n        }\n        const dataRowEvent = new DataRowEvent(row, event, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent) {\n            keyboardEvent.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, keyboardEvent, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            const current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(matCheckboxChange: MatCheckboxChange) {\n        this.isSelectAllChecked = matCheckboxChange.checked;\n\n        if (this.multiselect) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], matCheckboxChange.checked);\n                }\n            }\n\n            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            const element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            const value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            const value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            const sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        const event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            const event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter((column) => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return !this.loading && !this.isEmpty() && !this.noPermission;\n    }\n\n    isStickyHeaderEnabled() {\n        return this.stickyHeader && this.isHeaderVisible();\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n\n    getNameColumnValue() {\n        return this.data.getColumns().find( (el: any) => {\n            return el.key.includes('name');\n        });\n    }\n\n    getAutomationValue(row: DataRow, col: DataColumn) {\n        const name = this.getNameColumnValue();\n        return name ? row.getValue(name.key) : '';\n    }\n}\n\nexport interface DataTableDropEvent {\n    detail: {\n        target: 'cell' | 'header';\n        event: Event;\n        column: DataColumn;\n        row?: DataRow\n    };\n\n    preventDefault(): void;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span\n                [attr.aria-label]=\"value$ | async | adfTimeAgo: currentLocale\"\n                title=\"{{ tooltip | adfLocalizedDate: 'medium' }}\"\n                class=\"adf-datatable-cell-value\"\n                *ngIf=\"format === 'timeAgo'; else standard_date\">\n                {{ value$ | async | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span\n                class=\"adf-datatable-cell-value\"\n                title=\"{{ tooltip | adfLocalizedDate: format }}\"\n                class=\"adf-datatable-cell-value\"\n                [attr.aria-label]=\"value$ | async | adfLocalizedDate: format\">\n                {{ value$ | async | adfLocalizedDate: format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell adf-datatable-content-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n\n    static DATE_FORMAT = 'medium';\n\n    currentLocale: string;\n    dateFormat: string;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || this.dateFormat;\n        }\n        return this.dateFormat;\n    }\n\n    constructor(\n        userPreferenceService: UserPreferencesService,\n        alfrescoApiService: AlfrescoApiService,\n        appConfig: AppConfigService\n    ) {\n        super(alfrescoApiService);\n\n        this.dateFormat = appConfig.get('dateValues.defaultDateFormat', DateCellComponent.DATE_FORMAT);\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .subscribe((locale) => {\n                    this.currentLocale = locale;\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span\n                [title]=\"tooltip\"\n                [attr.aria-label]=\"value$ | async | adfFileSize\"\n                >{{ value$ | async | adfFileSize }}</span\n            >\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { PathInfoEntity } from '@alfresco/js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ value$ | async }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell adf-datatable-content-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n    @Input()\n    link: any[];\n\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n\n    /** @override */\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(\n                this.row,\n                this.column\n            );\n\n            if (path && path.name && path.elements) {\n                this.value$.next(path.name.split('/').pop());\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [this.column.format, parent.id];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-loading-content-template, loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-content-template, no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-permission-template, no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The empty-folder-content selector will be deprecated as it has been replace by\n * adf-custom-empty-content-template.\n */\n@Directive({\n    selector: 'adf-custom-empty-content-template, empty-folder-content'\n})\n\nexport class CustomEmptyContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-custom-loading-content-template'\n})\nexport class CustomLoadingContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The no-permission-content selector will be deprecated as it has been replace by\n * adf-custom-no-permission-template.\n */\n@Directive({\n    selector: 'adf-custom-no-permission-template, no-permission-content'\n})\nexport class CustomNoPermissionTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-json-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultJsonTemplate\" class=\"adf-datatable-cell-value\">\n                <pre\n                    class=\"adf-datatable-json-cell\"\n                    [adf-clipboard]=\"'CLIPBOARD.CLICK_TO_COPY'\"\n                    [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-container>\n        <ng-template #defaultJsonTemplate>\n            <span class=\"adf-datatable-cell-value\">\n                <pre class=\"adf-datatable-json-cell\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-template>\n    `,\n    styleUrls: ['./json-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class JsonCellComponent extends DataTableCellComponent implements OnInit {\n\n     /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n     @Input()\n     copyContent: boolean;\n\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            this.value$.next(this.data.getValue(this.row, this.column));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { NotificationModel } from '../models/notification.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    messages: Subject<NotificationModel> = new Subject();\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService,\n                private appConfigService: AppConfigService) {\n        this.DEFAULT_DURATION_MESSAGE = this.appConfigService.get<number>(AppConfigValues.NOTIFY_DURATION) || this.DEFAULT_DURATION_MESSAGE;\n\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        this.messages.next({ message: translatedMessage, dateTime: new Date });\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        this.messages.next({ message: translatedMessage, dateTime: new Date });\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n\n    /**\n     *  dismiss the notification snackbar\n     */\n    dismissSnackMessageAction() {\n        return this.snackBar.dismiss();\n    }\n\n    protected showMessage(message: string, panelClass: string, action?: string): MatSnackBarRef<any> {\n        message = this.translationService.instant(message);\n\n        this.messages.next({ message: message, dateTime: new Date });\n\n        return this.snackBar.open(message, action, {\n            duration: this.DEFAULT_DURATION_MESSAGE,\n            panelClass\n        });\n    }\n\n    /**\n     * Rase error message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showError(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-error-snackbar', action);\n    }\n\n    /**\n     * Rase info message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showInfo(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-info-snackbar', action);\n    }\n\n    /**\n     * Rase warning message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showWarning(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-warning-snackbar', action);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    /**\n     * Checks if the target element can have its text copied.\n     * @param target Target HTML element\n     * @returns True if the text can be copied, false otherwise\n     */\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            return !target.hasAttribute('disabled');\n        }\n        return false;\n    }\n\n    /**\n     * Copies text from an HTML element to the clipboard.\n     * @param target HTML element to be copied\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    /**\n     * Copies a text string to the clipboard.\n     * @param content Text to copy\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyContentToClipboard(content: string, message: string) {\n        try {\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (content));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n              });\n            document.execCommand('copy');\n            this.notify(message);\n        } catch (error) {\n            this.logService.error(error);\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, Component, ViewContainerRef, ComponentFactoryResolver, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    /** Translation key or message for the tooltip. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard')\n    placeholder: string;\n\n    /** Reference to the HTML element containing the text to copy. */\n    @Input()\n    target: HTMLInputElement | HTMLTextAreaElement;\n\n    /** Translation key or message for snackbar notification. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    constructor(private clipboardService: ClipboardService,\n                public viewContainerRef: ViewContainerRef,\n                private resolver: ComponentFactoryResolver) {}\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.copyToClipboard();\n    }\n\n    @HostListener('mouseenter')\n    showTooltip() {\n        if (this.placeholder) {\n            const componentFactory = this.resolver.resolveComponentFactory(ClipboardComponent);\n            const componentRef = this.viewContainerRef.createComponent(componentFactory).instance;\n            componentRef.placeholder = this.placeholder;\n        }\n    }\n\n    @HostListener('mouseleave')\n    closeTooltip() {\n        this.viewContainerRef.remove();\n    }\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        } else {\n            this.copyContentToClipboard(this.viewContainerRef.element.nativeElement.innerHTML);\n        }\n    }\n\n    private copyContentToClipboard(content) {\n        this.clipboardService.copyContentToClipboard(content, this.message);\n    }\n}\n\n@Component({\n    selector: 'adf-copy-content-tooltip',\n    template: `\n        <span class='adf-copy-tooltip'>{{ placeholder | translate }} </span>\n        `,\n    styleUrls: ['./clipboard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClipboardComponent implements OnInit {\n    placeholder: string;\n\n    ngOnInit() {\n        this.placeholder = this.placeholder || 'CLIPBOARD.CLICK_TO_COPY';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective, ClipboardComponent } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective,\n        ClipboardComponent\n    ],\n    exports: [\n        ClipboardDirective\n    ],\n    entryComponents: [ClipboardComponent]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataColumn } from '../../data/data-column.model';\n\n@Directive({\n    selector: '[adf-drop-zone]'\n})\nexport class DropZoneDirective implements OnInit, OnDestroy {\n    private element: HTMLElement;\n\n    @Input()\n    dropTarget: 'header' | 'cell' = 'cell';\n\n    @Input()\n    dropRow: DataRow;\n\n    @Input()\n    dropColumn: DataColumn;\n\n    constructor(elementRef: ElementRef, private ngZone: NgZone) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('drop', this.onDrop.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    onDragOver(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-dragover`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    onDrop(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-drop`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { CustomEmptyContentTemplateDirective } from './directives/custom-empty-content-template.directive';\nimport { CustomLoadingContentTemplateDirective } from './directives/custom-loading-template.directive';\nimport { CustomNoPermissionTemplateDirective } from './directives/custom-no-permission-template.directive';\nimport { JsonCellComponent } from './components/datatable/json-cell.component';\nimport { ClipboardModule } from '../clipboard/clipboard.module';\nimport { DropZoneDirective } from './components/datatable/drop-zone.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule,\n        ClipboardModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ]\n\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n        // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout(() => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n            .then((value) => {\n                const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n                const printType = (type === ViewUtilService.ContentGroup.PDF\n                    || type === ViewUtilService.ContentGroup.TEXT)\n                    ? ViewUtilService.ContentGroup.PDF : type;\n                this.printFile(url, printType);\n            })\n            .catch((err) => {\n                this.logService.error('Error with Printing');\n                this.logService.error(err);\n            });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const renditionPaging: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition: RenditionEntry = renditionPaging.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise<RenditionEntry>((resolve) => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PreviousRouteService {\n\n    private previousUrl: string;\n    private currentUrl: string;\n\n    constructor(private router: Router) {\n        this.currentUrl = this.router.url;\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getPreviousUrl(): string {\n        return this.previousUrl;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@angular/common';\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { RenditionPaging, SharedLinkEntry, Node, RenditionEntry, NodeEntry } from '@alfresco/js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { PreviousRouteService } from '../../services/previous-route.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\nimport { AppExtensionService, ViewerExtensionRef } from '@alfresco/adf-extensions';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar. */\n    @Input()\n    allowRightSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /** Toggles right sidebar visibility. Requires `allowRightSidebar` to be set to `true`. */\n    @Input()\n    showRightSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowLeftSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /** The template for the right sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarRightTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 10;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    viewerType = 'unknown';\n    isLoading = false;\n    nodeEntry: NodeEntry;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarRightTemplateContext: { node: Node } = { node: null };\n    sidebarLeftTemplateContext: { node: Node } = { node: null };\n    fileTitle: string;\n    viewerExtensions: Array<ViewerExtensionRef> = [];\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private location: Location,\n                private extensionService: AppExtensionService,\n                private el: ElementRef,\n                private router: Router,\n                private previousRouteService: PreviousRouteService) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe((node) => this.onNodeUpdated(node))\n        );\n\n        this.loadExtensions();\n    }\n\n    private loadExtensions() {\n        this.viewerExtensions = this.extensionService.getViewerExtensions();\n        this.viewerExtensions\n            .forEach((extension: ViewerExtensionRef) => {\n                this.externalExtensions.push(extension.fileExtension);\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: Node) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (node: NodeEntry) => {\n                        this.nodeEntry = node;\n                        this.setUpNodeFile(node.entry).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n                this.allowGoBack = false;\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    (sharedLinkEntry: SharedLinkEntry) => {\n                        this.setUpSharedLinkFile(sharedLinkEntry);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        const filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: Node) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarRightTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showRightSidebar = !this.showRightSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarRightTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarLeftTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        if (this.overlayMode) {\n            this.close();\n        } else {\n            const event = new BaseEvent<any>();\n            this.goBack.next(event);\n\n            if (!event.defaultPrevented) {\n\n                const previousUrl = this.previousRouteService.getPreviousUrl();\n\n                if (previousUrl && previousUrl.includes('login') || window.history.length <= 2) {\n                    this.router.navigate([{outlets: {overlay: null, primary: ['home']}}]);\n                } else {\n                    this.location.back();\n                }\n            }\n        }\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        const anchor = url.indexOf('#');\n        const query = url.indexOf('?');\n        const end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions: any = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.flat().indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        renditionId = renditionId.toLowerCase();\n\n        const supportedRendition: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition: RenditionEntry = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status: string = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        let currentRetry: number = 0;\n        return new Promise<RenditionEntry>((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition: RenditionEntry) => {\n                        const status: string = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                }\n            }, 1000);\n        });\n    }\n\n    checkExtensions(extensionAllowed) {\n        if (typeof extensionAllowed ===  'string') {\n            return this.extension.toLowerCase() === extensionAllowed.toLowerCase();\n        } else if (extensionAllowed.length > 0) {\n            return extensionAllowed.find((currentExtension) => {\n                return this.extension.toLowerCase() === currentExtension.toLowerCase();\n            });\n        }\n\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewEncapsulation,\n    ElementRef,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { ContentService } from '../../services/content.service';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): string {\n        return `scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`;\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private appConfigService: AppConfigService,\n        private contentService: ContentService,\n        private el: ElementRef) {\n        this.initializeScaling();\n    }\n\n    initializeScaling() {\n        const scaling = this.appConfigService.get<number>('adf-viewer.image-viewer-scaling', undefined) / 100;\n        if (scaling) {\n            this.scaleX = scaling;\n            this.scaleY = scaling;\n        }\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        const visibleViews = visible.views;\n\n        const numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        const state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                const continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\nexport interface PdfDocumentOptions {\n    url?: string;\n    data?: any;\n    withCredentials?: boolean;\n}\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n    randomPdfId: string;\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPageRendered = this.onPageRendered.bind(this);\n        this.randomPdfId = this.generateUuid();\n        this.currentScale = this.getUserScaling();\n    }\n\n    getUserScaling(): number {\n        const scaleConfig = this.appConfigService.get<number>('adf-viewer.pdf-viewer-scaling', undefined) / 100;\n        if (scaleConfig) {\n            return this.checkLimits(scaleConfig);\n        } else {\n            return 1;\n        }\n    }\n\n    checkLimits(scaleConfig: number): number {\n        if (scaleConfig > this.MAX_SCALE) {\n            return this.MAX_SCALE;\n        } else if (scaleConfig < this.MIN_SCALE) {\n            return this.MIN_SCALE;\n        } else {\n            return scaleConfig;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const options = {\n                    data: reader.result,\n                    withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n                };\n                this.executePdf(options);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            const options = {\n                url: urlFile.currentValue,\n                withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n            };\n            this.executePdf(options);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(pdfOptions: PdfDocumentOptions) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n\n        this.loadingTask = pdfjsLib.getDocument(pdfOptions);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            const level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, (error) => {\n                this.error.emit();\n            });\n\n        }, (error) => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById(`${this.randomPdfId}-viewer-viewerPdf`);\n        const container = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('textlayerrendered', this.onPageRendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPageRendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {\n            }\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        const viewerContainer = document.getElementById(`${this.randomPdfId}-viewer-main-container`);\n        const documentContainer = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (this.pdfViewer && documentContainer) {\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            const currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            const padding = 20;\n            const pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale = this.getUserScaling();\n            if (!scale) {\n                switch (this.currentScaleMode) {\n                    case 'page-actual':\n                        scale = 1;\n                        break;\n                    case 'page-width':\n                        scale = pageWidthScale;\n                        break;\n                    case 'page-height':\n                        scale = pageHeightScale;\n                        break;\n                    case 'page-fit':\n                        scale = Math.min(pageWidthScale, pageHeightScale);\n                        break;\n                    case 'auto':\n                        let horizontalScale;\n                        if (this.isLandscape) {\n                            horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                        } else {\n                            horizontalScale = pageWidthScale;\n                        }\n                        horizontalScale = Math.round(horizontalScale);\n                        scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                        break;\n                    default:\n                        this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                        return;\n                }\n\n                this.setScaleUpdatePages(scale);\n            } else {\n                this.currentScale = 0;\n                this.setScaleUpdatePages(scale);\n            }\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (this.pdfViewer) {\n            if (!this.isSameScale(this.currentScale, newScale)) {\n                this.currentScale = newScale;\n\n                this.pdfViewer._pages.forEach(function (currentPage) {\n                    currentPage.update(newScale);\n                });\n            }\n\n            this.pdfViewer.update();\n        }\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        const pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                disableClose: true,\n                data: { reason }\n            })\n            .afterClosed().subscribe((password) => {\n            if (password) {\n                callback(password);\n            }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPageRendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Keyboard Event Listener\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'adf-pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string | ArrayBuffer;\n\n    constructor(private http: HttpClient, private appConfigService: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        const withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text', withCredentials: withCredentialsMode }).subscribe((res) => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange.subscribe((fileExtension) => {\n            this.templateModel.isVisible = this.isVisible(fileExtension);\n        });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\nimport { DirectiveModule } from '../directives/directive.module';\n\n@NgModule({\n    imports: [\n        ExtensionsModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule,\n        DirectiveModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from '@alfresco/js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.apps = input.apps;\n            this.capabilities = input.capabilities;\n            this.company = input.company;\n            this.created = input.created;\n            this.email = input.email;\n            this.externalId = input.externalId;\n            this.firstName = input.firstName;\n            this.lastName = input.lastName;\n            this.fullname = input.fullname;\n            this.groups = input.groups;\n            this.id = input.id;\n            this.lastUpdate = input.lastUpdate;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp;\n            this.password = input.password;\n            this.pictureId = input.pictureId;\n            this.status = input.status;\n            this.tenantId = input.tenantId;\n            this.tenantName = input.tenantName;\n            this.tenantPictureId = input.tenantPictureId;\n            this.type = input.type;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserRepresentation } from '@alfresco/js-api';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((userRepresentation: UserRepresentation) => {\n                    return new BpmUserModel(userRepresentation);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from '@alfresco/js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\nimport { PersonEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map((personEntry: PersonEntry) => {\n                    return new EcmUserModel(personEntry.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string) {\n        if (avatarId) {\n            const nodeObj = {entry: {id: avatarId}};\n            return this.contentService.getContentUrl(nodeObj);\n        }\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class IdentityUserModel {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    username: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.email = obj.email || null;\n            this.username = obj.username || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { IdentityUserModel } from '../models/identity-user.model';\nimport { JwtHelperService } from '../../services/jwt-helper.service';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { IdentityRoleModel } from '../models/identity-role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IdentityUserService {\n\n    constructor(\n        private jwtHelperService: JwtHelperService,\n        private alfrescoApiService: AlfrescoApiService,\n        private appConfigService: AppConfigService) { }\n\n    /**\n     * Gets the name and other basic details of the current user.\n     * @returns The user's details\n     */\n    getCurrentUserInfo(): IdentityUserModel {\n        const familyName = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.FAMILY_NAME);\n        const givenName = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.GIVEN_NAME);\n        const email = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.USER_EMAIL);\n        const username = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.USER_PREFERRED_USERNAME);\n        const user = { firstName: givenName, lastName: familyName, email: email, username: username };\n        return new IdentityUserModel(user);\n    }\n\n    /**\n     * Find users based on search input.\n     * @param search Search query string\n     * @returns List of users\n     */\n    findUsersByName(search: string): Observable<any> {\n        if (search === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { search: search }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on username input.\n     * @param username Search query string\n     * @returns List of users\n     */\n    findUserByUsername(username: string): Observable<any> {\n        if (username === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { username: username }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on email input.\n     * @param email Search query string\n     * @returns List of users\n     */\n    findUserByEmail(email: string): Observable<any> {\n        if (email === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { email: email }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on id input.\n     * @param id Search query string\n     * @returns users object\n     */\n    findUserById(id: string): Observable<any> {\n        if (id === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl() + '/' + id;\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Get client roles of a user for a particular client.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns List of client roles\n     */\n    getClientRoles(userId: string, clientId: string): Observable<any[]> {\n        const url = this.buildUserClientRoleMapping(userId, clientId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        );\n    }\n\n    /**\n     * Checks whether user has access to a client app.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasClientApp(userId: string, clientId: string): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                if (clientRoles.length > 0) {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }\n\n    /**\n     * Checks whether a user has any of the client app roles.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyClientAppRole(userId: string, clientId: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                let hasRole = false;\n                if (clientRoles.length > 0) {\n                    roleNames.forEach((roleName) => {\n                        const role = clientRoles.find((availableRole) => {\n                            return availableRole.name === roleName;\n                        });\n\n                        if (role) {\n                            hasRole = true;\n                            return;\n                        }\n                    });\n                }\n                return hasRole;\n            })\n        );\n    }\n\n    /**\n     * Gets the client ID for an application.\n     * @param applicationName Name of the application\n     * @returns Client ID string\n     */\n    getClientIdByApplicationName(applicationName: string): Observable<string> {\n        const url = this.buildGetClientsUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { clientId: applicationName }, bodyParam = {}, headerParams = {}, formParams = {},\n            contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.alfrescoApiService.getInstance()\n            .oauth2Auth.callCustomApi(url, httpMethod, pathParams, queryParams, headerParams,\n                formParams, bodyParam, contentTypes,\n                accepts, Object, null, null)\n        ).pipe(\n            map((response: any[]) => {\n                const clientId = response && response.length > 0 ? response[0].id : '';\n                return clientId;\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has access to an application.\n     * @param userId ID of the user\n     * @param applicationName Name of the application\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasApplicationAccess(userId: string, applicationName: string): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasClientApp(userId, clientId);\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has any application role.\n     * @param userId ID of the target user\n     * @param applicationName Name of the application\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyApplicationRole(userId: string, applicationName: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasAnyClientAppRole(userId, clientId, roleNames);\n            })\n        );\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user info objects\n     */\n    getUsers(): Observable<IdentityUserModel[]> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, authNames = [], contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam, authNames,\n            contentTypes, accepts, null, null)\n        ).pipe(\n            map((response: IdentityUserModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets a list of roles for a user.\n     * @param userId ID of the user\n     * @returns Array of role info objects\n     */\n    getUserRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildRolesUrl(userId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ).pipe(\n            map((response: IdentityRoleModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets an array of users (including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const users = await this.getUsers().toPromise();\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    /**\n     * Gets an array of users (not including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithoutCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const currentUser = this.getCurrentUserInfo();\n            let users = await this.getUsers().toPromise();\n\n            users = users.filter((user) => { return user.username !== currentUser.username; });\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    private async userHasAnyRole(userId: string, roleNames: string[]): Promise<boolean> {\n        const userRoles = await this.getUserRoles(userId).toPromise();\n        const hasAnyRole = roleNames.some((roleName) => {\n            const filteredRoles = userRoles.filter((userRole) => {\n                return userRole.name.toLocaleLowerCase() === roleName.toLocaleLowerCase();\n            });\n\n            return filteredRoles.length > 0;\n        });\n\n        return hasAnyRole;\n    }\n\n    /**\n     * Checks if a user has one of the roles from a list.\n     * @param userId ID of the target user\n     * @param roleNames Array of roles to check for\n     * @returns True if the user has one of the roles, false otherwise\n     */\n    checkUserHasRole(userId: string, roleNames: string[]): Observable<boolean> {\n        return this.getUserRoles(userId).pipe(map((userRoles: IdentityRoleModel[]) => {\n            let hasRole = false;\n            if (userRoles && userRoles.length > 0) {\n                roleNames.forEach((roleName: string) => {\n                    const role = userRoles.find((userRole) => {\n                        return roleName === userRole.name;\n                    });\n                    if (role) {\n                        hasRole = true;\n                        return;\n                    }\n                });\n            }\n            return hasRole;\n        }));\n    }\n\n    private buildUserUrl(): any {\n        return `${this.appConfigService.get('identityHost')}/users`;\n    }\n\n    private buildUserClientRoleMapping(userId: string, clientId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/clients/${clientId}`;\n    }\n\n    private buildRolesUrl(userId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/realm/composite`;\n    }\n\n    private buildGetClientsUrl() {\n        return `${this.appConfigService.get('identityHost')}/clients`;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { IdentityUserModel } from './../models/identity-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\nimport { IdentityUserService } from '../services/identity-user.service';\nimport { of, Observable } from 'rxjs';\nimport { MatMenuTrigger } from '@angular/material';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private identityUserService: IdentityUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        if (this.authService.isOauth()) {\n            this.loadIdentityUserInfo();\n        } else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {\n            this.loadEcmUserInfo();\n            this.loadBpmUserInfo();\n        } else if (this.authService.isEcmLoggedIn()) {\n            this.loadEcmUserInfo();\n        } else if (this.authService.isBpmLoggedIn()) {\n            this.loadBpmUserInfo();\n        }\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27 ) {\n            this.trigger.closeMenu();\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();\n    }\n\n    loadBpmUserInfo() {\n        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();\n    }\n\n    loadIdentityUserInfo() {\n        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    getEcmAvatar(avatarId: any ): string {\n        return this.ecmUserService.getUserProfileImage(avatarId);\n    }\n\n    getBpmUserImage(): string {\n        return this.bpmUserService.getCurrentUserProfileImage();\n    }\n\n    showOnRight(): boolean {\n        return this.namePosition === 'right';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityRoleModel {\n\n    id: string;\n    name: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\nimport { ENTER } from '@angular/cdk/keycodes';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        const providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n            this.addIdentityHostFormControl();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n                this.form.removeControl('identityHost');\n            } else {\n                this.addOAuthFormGroup();\n                this.addIdentityHostFormControl();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addIdentityHostFormControl() {\n        const identityHostFormControl = this.createIdentityFormControl();\n        this.form.addControl('identityHost', identityHostFormControl);\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        const oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createIdentityFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.IDENTITY_HOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    keyDownFunction(event: any) {\n        if (event.keyCode === ENTER && this.form.valid) {\n            this.onSubmit(this.form.value);\n        }\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n        this.storageService.setItem(AppConfigValues.IDENTITY_HOST, values.identityHost);\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get identityHost(): AbstractControl {\n        return this.form.get('identityHost');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from '@alfresco/js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel = PaginationComponent.DEFAULT_PAGINATION;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pagination.maxItems = pagSize;\n        });\n    }\n\n    ngOnInit() {\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;\n        }\n\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe((pagination: PaginationModel) => {\n\n                if (pagination.count === 0 && !this.isFirstPage) {\n                    this.goPrevious();\n                }\n\n                this.pagination = pagination;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.userPreferencesService.paginationSize = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const paginationModel: PaginationModel = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(paginationModel);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(paginationModel);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { RequestPaginationModel } from '../models/request-pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Pagination } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    _target: PaginatedComponent;\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    set target(target: PaginatedComponent) {\n        if (target) {\n            this._target = target;\n            this.paginationSubscription = target.pagination.subscribe((pagination: PaginationModel) => {\n                this.isLoading = false;\n                this.pagination = pagination;\n\n                if (!this.pagination.hasMoreItems) {\n                    this.pagination.hasMoreItems = false;\n                }\n\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<RequestPaginationModel> = new EventEmitter<RequestPaginationModel>();\n\n    pagination: PaginationModel = InfinitePaginationComponent.DEFAULT_PAGINATION;\n\n    requestPaginationModel: RequestPaginationModel = {\n        skipCount: 0,\n        merge: true\n    };\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pageSize: number) => {\n            this.pageSize = this.pageSize || pageSize;\n            this.requestPaginationModel.maxItems = this.pageSize;\n        });\n    }\n\n    onLoadMore() {\n        this.requestPaginationModel.skipCount = 0;\n        this.requestPaginationModel.merge = false;\n\n        this.requestPaginationModel.maxItems += this.pageSize;\n\n        this.loadMore.next(this.requestPaginationModel);\n\n        if (this._target) {\n            this.isLoading = true;\n            this._target.updatePagination(<RequestPaginationModel> this.requestPaginationModel);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pageSize;\n\n        if (this._target) {\n            this._target.updatePagination(this.pagination);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\ninterface ValidationMessage {\n    value: string;\n    params?: any;\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: ValidationMessage } };\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService,\n        private location: Location,\n        private route: ActivatedRoute\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            const oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.authService.isEcmLoggedIn() || this.authService.isBpmLoggedIn()) {\n            this.location.forward();\n        } else {\n            this.route.queryParams.subscribe((params: Params) => {\n                const url = params['redirectUrl'];\n                const provider = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n                this.authService.setRedirect({ provider, url });\n              });\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges.subscribe((data) => this.onValueChanged(data));\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.disableError();\n\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            const args = new LoginSubmitEvent({\n                controls: { username: this.form.controls.username }\n            });\n            this.executeSubmit.emit(args);\n\n            if (args.defaultPrevented) {\n                return false;\n            } else {\n                this.performLogin(values);\n            }\n        }\n    }\n\n    implicitLogin() {\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            this.authService.ssoImplicitLogin();\n        }\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (const field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                const hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (const key in this.form.controls[field].errors) {\n                        if (key) {\n                            const message = this._message[field][key];\n                            if (message && message.value) {\n                                const translated = this.translateService.instant(message.value, message.params);\n                                this.formError[field] += translated;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect();\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.isError = true;\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n            -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        this._message[field][ruleId] = {\n            value: msg,\n            params\n        };\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: {\n                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n                },\n                minLength: {\n                    value: 'LOGIN.MESSAGES.USERNAME-MIN',\n                    params: {\n                        get minLength() {\n                            return this.minLength;\n                        }\n                    }\n                }\n\n            },\n            password: {\n                required: {\n                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n                }\n            }\n        };\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-header, login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-footer, login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n    /** Emitted when the login succeeds. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\nimport { LanguageItem } from './language.interface';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<LanguageItem> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesConfigApp = this.appConfig.get<Array<LanguageItem>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesConfigApp) {\n            this.languages = languagesConfigApp;\n        }\n    }\n\n    changeLanguage(language: LanguageItem) {\n        this.userPreference.locale = language.key;\n        this.userPreference.set('textOrientation', language.direction || 'ltr');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-info-drawer-title], [info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[adf-info-drawer-buttons], [info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[adf-info-drawer-content], [info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab (string or translation key). */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer (string or translation key). */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColumn: string): DataColumn[] {\n        return presetColumn ? (this.layoutPresets[presetColumn]).map((col) => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardViewUpdateService {\n\n    itemUpdated$ = new Subject<UpdateNotification>();\n    itemClicked$ = new Subject<ClickNotification>();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdated$.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClicked$.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n    dateFormat: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplayFormat = this.dateFormat;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.dateFormat);\n        }\n    }\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            const momentDate = moment(newDateValue.value, this.dateFormat, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n    valueSeparator: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator') || CardViewTextItemComponent.DEFAULT_SEPARATOR;\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return !!this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): boolean {\n        return this.errorMessages && this.errorMessages.length > 0;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n        this.setEditMode(false);\n        this.resetErrorMessages();\n    }\n\n    private resetErrorMessages() {\n        this.errorMessages = [];\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            const updatedValue = this.prepareValueForUpload(this.property, this.editedValue);\n            this.cardViewUpdateService.update(this.property, updatedValue);\n            this.property.value = updatedValue;\n            this.setEditMode(false);\n            this.resetErrorMessages();\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    prepareValueForUpload(property: CardViewTextItemModel, value: string): string | string [] {\n        if (property.multivalued) {\n            const listOfValues = value.split(this.valueSeparator.trim()).map((item) => item.trim());\n            return listOfValues;\n        }\n        return value;\n    }\n\n    onTextAreaInputChange() {\n        this.errorMessages = this.property.getValidationErrors(this.editedValue);\n    }\n\n    clicked(): void {\n        if (typeof this.property.clickCallBack === 'function') {\n            this.property.clickCallBack();\n        } else {\n            this.cardViewUpdateService.clicked(this.property);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        this.cardViewUpdateService.update(this.property, event.value);\n        this.property.value = event.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter((i) => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        const existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            const resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifeCycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifeCycleMethods.forEach((method) => {\n            this[method] = this.proxy.bind(this, method);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map((changeName) => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(cardViewItemProperties: CardViewItemProperties) {\n        this.label = cardViewItemProperties.label || '';\n        this.value = cardViewItemProperties.value;\n        this.key = cardViewItemProperties.key;\n        this.default = cardViewItemProperties.default;\n        this.editable = !!cardViewItemProperties.editable;\n        this.clickable = !!cardViewItemProperties.clickable;\n        this.icon = cardViewItemProperties.icon || '';\n        this.validators = cardViewItemProperties.validators || [];\n        this.data = cardViewItemProperties.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map((validator) => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter((validator) => !validator.isValid(value)).map((validator) => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(cardViewBoolItemProperties: CardViewBoolItemProperties) {\n        super(cardViewBoolItemProperties);\n\n        if (cardViewBoolItemProperties.value !== undefined) {\n            this.value = !!JSON.parse(cardViewBoolItemProperties.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\nimport { LocalizedDatePipe } from '../../pipes/localized-date.pipe';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string;\n    locale: string;\n\n    localizedDatePipe: LocalizedDatePipe;\n\n    constructor(cardViewDateItemProperties: CardViewDateItemProperties) {\n        super(cardViewDateItemProperties);\n\n        if (cardViewDateItemProperties.format) {\n            this.format = cardViewDateItemProperties.format;\n        }\n\n        if (cardViewDateItemProperties.locale) {\n            this.format = cardViewDateItemProperties.locale;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            this.localizedDatePipe = new LocalizedDatePipe();\n            return this.localizedDatePipe.transform(this.value, this.format, this.locale);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM d, y, H:mm';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    multivalued?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n    clickCallBack?: any;\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n        this.multiline = !!cardViewTextItemProperties.multiline;\n        this.multivalued = !!cardViewTextItemProperties.multivalued;\n        this.pipes = cardViewTextItemProperties.pipes || [];\n        this.clickCallBack = cardViewTextItemProperties.clickCallBack ? cardViewTextItemProperties.clickCallBack : null;\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '..//validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseFloat(cardViewTextItemProperties.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseInt(cardViewTextItemProperties.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(cardViewKeyValuePairsItemProperties: CardViewKeyValuePairsItemProperties) {\n        super(cardViewKeyValuePairsItemProperties);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(cardViewSelectItemProperties: CardViewSelectItemProperties<T>) {\n        super(cardViewSelectItemProperties);\n\n        this.options$ = cardViewSelectItemProperties.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap((options) => {\n                const option = options.find((o) => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.getItem(key)) || super.get<T>(key, defaultValue));\n        } else if (key === AppConfigValues.APPLICATION) {\n            return undefined;\n        } else {\n            return <T> (<any> this.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n\n    getItem(key: string): string | null {\n        return localStorage.getItem(key);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormSaveRepresentation } from '@alfresco/js-api';\n\nexport class FormDefinitionModel extends FormSaveRepresentation {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n        super();\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        const fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    const field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n    static ATTACH_FOLDER: string = 'select-folder';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: any;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            const obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME,\n        FormFieldTypes.ATTACH_FOLDER\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                const option = field.options.find((opt) => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            const valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            const d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinDateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDate(field: FormFieldModel, dateFormat: string): boolean {\n        const MIN_DATE_FORMAT = 'DD-MM-YYYY';\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n        const min = moment(field.minValue, MIN_DATE_FORMAT);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateFieldValidator implements FormFieldValidator {\n\n    MAX_DATE_FORMAT = 'DD-MM-YYYY';\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                return false;\n            }\n\n            // remove time and timezone info\n            let d;\n            if (typeof field.value === 'string') {\n                d = moment(field.value.split('T')[0], dateFormat);\n            } else {\n                d = field.value;\n            }\n            const max = moment(field.maxValue, this.MAX_DATE_FORMAT);\n\n            if (d.isAfter(max)) {\n                field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n                field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find((item) => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel): boolean {\n        return field.options.find((item) => item.id === field.value) ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly defaultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            const validators = this.form.fieldValidators || [];\n            for (const validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.responseVariable) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.defaultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaheadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaheadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        const variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (const currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    const col = new ContainerColumnModel();\n\n                    const fields: FormFieldModel[] = (json.fields[currentField] || []).map((f) => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.hasOwnProperty('value') ? json.value : null;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                const options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    const emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            const entry: FormFieldOption[] = this.options.filter((opt) =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    const entry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                const rbEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                this.form.hasUpload = true;\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = this.value.map((elem) => elem.id).join(',');\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                const taEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                const dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    /* cspell:disable-next-line */\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        const option: FormFieldOption = this.options.find((opt) => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n            json.params.field &&\n            json.params.field.type === FormFieldTypes.DATE) ||\n            json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n            json.params.field &&\n            json.params.field.type === FormFieldTypes.DATETIME) ||\n            json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'SAVE';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'COMPLETE';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'START PROCESS';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormValues } from './widgets/core/form-values';\nimport { TabModel } from './widgets/core/tab.model';\nimport { FormWidgetModel } from './widgets/core/form-widget.model';\nimport { FormOutcomeModel } from './widgets/core/form-outcome.model';\nimport { FormFieldModel } from './widgets/core/form-field.model';\nimport { ContainerModel } from './widgets/core/container.model';\n\nexport abstract class FormBaseModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    json: any;\n\n    values: FormValues = {};\n    tabs: TabModel[] = [];\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n\n    className: string;\n    readOnly: boolean = false;\n    taskName;\n\n    isValid: boolean = true;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find((field) => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        const formFieldModel: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                const container = <ContainerModel> field;\n                formFieldModel.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    formFieldModel.push(...column.fields);\n                });\n            }\n        }\n\n        return formFieldModel;\n    }\n\n    markAsInvalid() {\n        this.isValid = false;\n    }\n\n    abstract validateForm();\n    abstract validateField(field: FormFieldModel);\n    abstract onFormFieldChanged(field: FormFieldModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\nimport { FormBaseModel } from '../../form-base.model';\n\nexport class FormModel extends FormBaseModel {\n\n    readonly id: number;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    processVariables: any;\n\n    constructor(formRepresentationJSON?: any, formValues?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        super();\n        this.readOnly = readOnly;\n\n        if (formRepresentationJSON) {\n            this.json = formRepresentationJSON;\n\n            this.id = formRepresentationJSON.id;\n            this.name = formRepresentationJSON.name;\n            this.taskId = formRepresentationJSON.taskId;\n            this.taskName = formRepresentationJSON.taskName || formRepresentationJSON.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = formRepresentationJSON.processDefinitionId;\n            this.customFieldTemplates = formRepresentationJSON.customFieldTemplates || {};\n            this.selectedOutcome = formRepresentationJSON.selectedOutcome || {};\n            this.className = formRepresentationJSON.className || '';\n\n            const tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = formRepresentationJSON.processVariables;\n\n            this.tabs = (formRepresentationJSON.tabs || []).map((t) => {\n                const model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(formRepresentationJSON);\n\n            if (formValues) {\n                this.loadData(formValues);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                const field = this.fields[i];\n                if (field.tab) {\n                    const tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (formRepresentationJSON.fields) {\n                const saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'SAVE',\n                    isSystem: true\n                });\n                const completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'COMPLETE',\n                    isSystem: true\n                });\n                const startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'START PROCESS',\n                    isSystem: true\n                });\n\n                const customOutcomes = (formRepresentationJSON.outcomes || []).map((obj) => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        const errorsField: FormFieldModel[] = [];\n\n        const fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this.isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this.isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this.markAsInvalid();\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this.markAsInvalid();\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        const formWidgetModel: FormWidgetModel[] = [];\n\n        for (const field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    const originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return formWidgetModel;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(formValues: FormValues) {\n        for (const field of this.getFormFields()) {\n            if (formValues[field.id]) {\n                field.json.value = formValues[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from '@alfresco/js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchActivitiEcmModel().subscribe(\n                (model) => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find((model) => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                (model) => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        (modelActive) => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        (err) => this.handleError(err)\n                    );\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                (ecmType) => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                (typeCreated) => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        (propertyAdded) => {\n                            this.logService.info('property Added', propertyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find((type) => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        const name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        const name = this.cleanNameType(typeName);\n\n        const properties = [];\n        if (formFields && formFields.values) {\n            for (const key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\nimport {\n    Activiti,\n    CompleteFormRepresentation,\n    SaveFormRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): Activiti.TaskApi {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): Activiti.ModelsApi {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): Activiti.EditorApi {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): Activiti.ProcessApi {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): Activiti.ProcessInstanceVariablesApi {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): Activiti.UsersWorkflowApi {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): Activiti.GroupsApi {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            const form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$save',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return new Observable((observer) => {\n            this.createForm(formName).subscribe(\n                (form) => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        (customType) => {\n                            const formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            from(\n                                this.editorApi.saveForm(form.id, formDefinitionModel)\n                            ).subscribe((formData) => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, (err) => this.handleError(err));\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        const dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: number, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n            .pipe(\n                map(function (forms: any) {\n                    return forms.data.find((formData) => formData.name === name);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVariablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        const saveFormRepresentation = <SaveFormRepresentation> { values: formValues };\n\n        return from(this.taskApi.saveTaskForm(taskId, saveFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        const completeFormRepresentation: any = <CompleteFormRepresentation> { values: formValues };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return from(this.taskApi.completeTaskForm(taskId, completeFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: number): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        const opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param form Object representing a form\n     * @returns ID string\n     */\n    getFormId(form: any): string {\n        let result = null;\n\n        if (form && form.data && form.data.length > 0) {\n            result = form.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element required=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                const field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter((tab) => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit {\n\n    DATE_FORMAT = 'DD/MM/YYYY';\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, this.DATE_FORMAT);\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, this.DATE_FORMAT);\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map((tabModel) => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map((field) => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        const visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const isLeftFieldPresent = visibilityObj && (visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId);\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel, accumulator: any[] = [], result: boolean = false): boolean {\n        const leftValue = this.getLeftValue(form, visibilityObj);\n        const rightValue = this.getRightValue(form, visibilityObj);\n        const actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n\n        accumulator.push({ value: actualResult, operator: visibilityObj.nextConditionOperator });\n        if (visibilityObj.nextCondition) {\n            result = this.isFieldVisible(form, visibilityObj.nextCondition, accumulator);\n        } else {\n            result = accumulator[0].value;\n\n            for (let i = 1; i < accumulator.length; i++) {\n                result = this.evaluateLogicalOperation(\n                    accumulator[i - 1].operator,\n                    result,\n                    accumulator[i].value\n                );\n            }\n        }\n\n        return result;\n\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string {\n        let leftValue = '';\n        if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {\n            leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);\n        } else if (visibilityObj.leftFormFieldId) {\n            leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);\n            leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string {\n        let valueFound = '';\n        if (visibilityObj.rightRestResponseId) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);\n        } else if (visibilityObj.rightFormFieldId) {\n            valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string): any {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (!value) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string): any {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string): string {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string): string {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            const option = field.options.find((opt) => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        const formattedFieldName = this.removeLabel(field, fieldToFind);\n        return field.id ? field.id.toUpperCase() === formattedFieldName.toUpperCase() : false;\n    }\n\n    private removeLabel(field: FormFieldModel, fieldToFind): string {\n        let formattedFieldName = fieldToFind || '';\n        if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {\n            formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);\n        }\n        return formattedFieldName;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]): string {\n        return this.getFormVariableValue(form, name) ||\n            this.getProcessVariableValue(name, processVarList);\n    }\n\n    private getFormVariableValue(form: FormModel, identifier: string): string {\n        const variables = this.getFormVariables(form);\n        if (variables) {\n            const formVariable = variables.find((formVar) => {\n                return formVar.name === identifier || formVar.id === identifier;\n            });\n\n            let value;\n            if (formVariable) {\n                value = formVariable.value;\n                if (formVariable.type === 'date') {\n                    value += 'T00:00:00.000Z';\n                }\n            }\n\n            return value;\n        }\n    }\n\n    private getFormVariables(form: FormModel): any[] {\n        return  form.json.variables;\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]): string {\n        if (processVarList) {\n            const processVariable = processVarList.find((variable) => variable.id === name);\n            if (processVariable) {\n                return processVariable.value;\n            }\n        }\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map((res) => {\n                    const jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    toJson(res: any): any {\n        return res || {};\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            const dateValue = moment(value, 'D-M-YYYY');\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach((row) => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter((col) => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map((obj) => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map((obj) => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map((r) => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        const oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            const arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            const idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (const col of this.columns) {\n                for (const validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        const rowValue = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (rowValue) {\n                return rowValue.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return rowValue ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (rowValue) {\n                return moment(rowValue.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return rowValue || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let columnName = column.name;\n        if (column.type === 'Amount') {\n            const currency = column.amountCurrency || '$';\n            columnName = `${column.name} (${currency})`;\n        }\n        return columnName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            const buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let valid = true;\n\n        if (this.content && this.content.field) {\n            valid = this.content.field.isValid;\n        }\n\n        return valid;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keyCode) {\n        return this.selectArrayCode.indexOf(keyCode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            const cellValue = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (cellValue || 0);\n            }\n            return cellValue;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                const row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach((key) => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\n\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), 'YYYY-MM-DD');\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] = '';\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit {\n\n    DATE_TIME_FORMAT: string = 'DD/MM/YYYY HH:mm';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_TIME_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_TIME_FORMAT);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_TIME_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_TIME_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_TIME_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        const field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find((opt) => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            const params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                const restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((groupModel: GroupModel[]) => this.groups = groupModel || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((group: GroupModel[]) => {\n                        this.groups = group || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        const option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        const option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToInvolve};\n        return from(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToRemove};\n        return from(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            const value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError((err) => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            const value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            const params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                const restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            const displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-text-mask], [textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            const value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            const calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        const newValueLength = newValue.length;\n        const oldValue = this.getValue() || '';\n        const oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        const buf = [];\n        const value = val;\n        let maskIndex = 0;\n        const maskLen = mask.length;\n        let valueIndex = 0;\n        const valueLength = value.length;\n        let offset = 1;\n        let addMethod = 'push';\n        let resetPos = -1;\n        let lastMaskChar;\n        let lastUntranslatedMaskChar;\n        let check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            const maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        const lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n            this.field.form.taskId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n            this.field.form.processDefinitionId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue);\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        const val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter((item) => {\n            const name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        const option = this.field.options.find((item) => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable((observer) => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        const files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        const index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(contentLinkModel: any): void {\n        const file = new ContentLinkModel(contentLinkModel);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormBaseModel } from './form-base.model';\nimport { FormOutcomeModel, FormFieldValidator, FormFieldModel, FormOutcomeEvent } from './widgets';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nexport abstract class FormBaseComponent {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'COMPLETE';\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Save` outcome button is shown but will be disabled. */\n    @Input()\n    disableSaveButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[];\n\n    /** Emitted when the supplied form values have a validation error. */\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    form: FormBaseModel;\n\n    getParsedFormDefinition(): FormBaseComponent {\n        return this;\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        let titleEnabled = false;\n        if (this.showTitle && this.form) {\n            titleEnabled = true;\n        }\n        return titleEnabled;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormBaseComponent.COMPLETE_OUTCOME_NAME ? FormBaseComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.disableSaveButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormBaseComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    abstract onRefreshClicked();\n\n    abstract saveTaskForm();\n\n    abstract completeTaskForm(outcome?: string);\n\n    protected abstract onTaskSaved(form: FormBaseModel);\n\n    protected abstract storeFormAsMetadata();\n\n    protected abstract onExecuteOutcome(outcome: FormOutcomeModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    /** The content id to show. */\n    @Input()\n    id: string;\n\n    /** Toggles showing document content. */\n    @Input()\n    showDocumentContent: boolean = true;\n\n    /** Emitted when the content is clicked. */\n    @Output()\n    contentClick = new EventEmitter();\n\n    /** Emitted when the thumbnail has loaded. */\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the content has loaded. */\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { FormBaseModel } from './form-base.model';\n\n@Component({\n    selector: 'adf-form-renderer',\n    templateUrl: './form-renderer.component.html',\n    styleUrls: ['./form-renderer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormRendererComponent {\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    @Input()\n    formDefinition: FormBaseModel;\n\n    debugMode: boolean;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiCompatibility, MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string) {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNode): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNode) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\nimport { AlfrescoApiCompatibility, NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<NodeEntry> {\n        const properties = {};\n        for (const key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<NodeEntry> {\n        const body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(nodeEntry: NodeEntry): NodeMetadata {\n        const metadata = {};\n\n        if (nodeEntry && nodeEntry.entry.properties) {\n            for (const key in nodeEntry.entry.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = nodeEntry.entry.properties[key];\n                    } else {\n                        metadata [key] = nodeEntry.entry.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, nodeEntry.entry.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-form-custom-button], [form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        const originalField = this.getField();\n        if (originalField) {\n            const customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                const factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                const instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                const componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    const instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe((field) => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        const componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        const metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        const factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        const module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find((x) => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FormRendererComponent } from './components/form-renderer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormBaseModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    OnInit,\n    AfterViewInit,\n    ViewChild,\n    OnDestroy,\n    TemplateRef,\n    EventEmitter,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { UserPreferencesService } from '../../../services/user-preferences.service';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Direction } from '@angular/cdk/bidi';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sidenav-layout' }\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n    static STEP_OVER = 600;\n\n    /** The direction of the layout. 'ltr' or 'rtl' */\n    dir = 'ltr';\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private mediaMatcher: MediaMatcher, private userPreferencesService: UserPreferencesService ) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        this.userPreferencesService\n            .select('textOrientation')\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((direction: Direction) => {\n                this.dir = direction;\n            });\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimation: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({\n        'margin-left': '{{ margin-left }}px',\n        'margin-right': '{{ margin-right }}px'\n    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),\n    state('compact', style({\n        'margin-left': '{{ margin-left }}px',\n        'margin-right': '{{ margin-right }}px'\n    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation, OnChanges } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimation } from '../../helpers/animations';\nimport { Direction } from '@angular/cdk/bidi';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimation]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    /** Layout text orientation 'ltr' | 'rtl' */\n    @Input() direction: Direction = 'ltr';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded' };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.toggledContentAnimation;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    ngOnChanges(changes) {\n        if (changes && changes.direction) {\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    getContentAnimationState() {\n        return this.contentAnimationState;\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            if (this.position === 'start' && this.direction === 'ltr') {\n                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };\n            }\n\n            if (this.position === 'start' && this.direction === 'rtl') {\n                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };\n            }\n\n            if (this.position === 'end' && this.direction === 'ltr') {\n                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };\n            }\n\n            if (this.position === 'end' && this.direction === 'rtl') {\n                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };\n            }\n\n        } else {\n            if (this.position === 'start' && this.direction === 'ltr') {\n                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };\n            }\n\n            if (this.position === 'start' && this.direction === 'rtl') {\n                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };\n            }\n\n            if (this.position === 'end' && this.direction === 'ltr') {\n                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };\n            }\n\n            if (this.position === 'end' && this.direction === 'rtl') {\n                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };\n            }\n        }\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    /** Title of the application. */\n    @Input() title: string;\n\n    /** Path to an image file for the application logo. */\n    @Input() logo: string;\n\n    /** The router link for the application logo, when clicked. */\n    @Input() redirectUrl: string | any[] = '/';\n\n    /** The tooltip text for the application logo. */\n    @Input() tooltip: string;\n\n    /**\n     * Background color for the header. It can be any hex color code or one\n     * of the Material theme colors: 'primary', 'accent' or 'warn'.\n     */\n    @Input() color: string;\n\n    /**\n     * Toggles whether the sidenav button will be displayed in the header\n     * or not.\n     */\n    @Input() showSidenavToggle: boolean = true;\n\n    /** Emitted when the sidenav button is clicked. */\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side of the page that the drawer is attached to (can be 'start' or 'end') */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule,\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n\n    currentLocale;\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n        userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.currentLocale = locale;\n        });\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from '@alfresco/js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number;\n    externalId?: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.id = input.id;\n            this.email = input.email || null;\n            this.firstName = input.firstName || null;\n            this.lastName = input.lastName || null;\n            this.pictureId = input.pictureId || null;\n            this.externalId = input.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({ message: message }, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>((observer) => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((currentComment) => {\n                            this.commentObserver.next(currentComment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key gets changed. */\n    @Output()\n    valueChange = new EventEmitter<string>();\n\n    /** Raised each time direction gets changed. */\n    @Output()\n    sortingChange = new EventEmitter<boolean>();\n\n    onOptionChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.valueChange.emit(this.selected);\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.sortingChange.emit(this.ascending);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    static UNKNOWN_ERROR = 'UNKNOWN';\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string = ErrorContentComponent.UNKNOWN_ERROR;\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id']) {\n                    this.errorCode = this.checkErrorExists(params['id']) ? params['id'] : ErrorContentComponent.UNKNOWN_ERROR;\n                }\n            });\n        }\n    }\n\n    checkErrorExists(errorCode: string ) {\n        const errorMessage = this.translateService.instant('ERROR_CONTENT.' + errorCode);\n        return errorMessage !== ('ERROR_CONTENT.' + errorCode);\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanActivateChild\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\nexport abstract class AuthGuardBase implements CanActivate, CanActivateChild {\n    abstract checkLogin(\n        activeRoute: ActivatedRouteSnapshot,\n        redirectUrl: string\n    ): Observable<boolean> | Promise<boolean> | boolean;\n\n    protected get withCredentials(): boolean {\n        return this.appConfigService.get<boolean>(\n            'auth.withCredentials',\n            false\n        );\n    }\n\n    constructor(\n        protected authenticationService: AuthenticationService,\n        protected router: Router,\n        protected appConfigService: AppConfigService\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.checkLogin(route, state.url);\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    protected redirectToUrl(provider: string, url: string) {\n        this.authenticationService.setRedirect({ provider, url });\n\n        const pathToLogin = this.getLoginRoute();\n        const urlToRedirect = `/${pathToLogin}?redirectUrl=${url}`;\n\n        this.router.navigateByUrl(urlToRedirect);\n    }\n\n    protected getLoginRoute(): string {\n        return (\n            this.appConfigService &&\n            this.appConfigService.get<string>(\n                AppConfigValues.LOGIN_ROUTE,\n                'login'\n            )\n        );\n    }\n\n    protected isOAuthWithoutSilentLogin() {\n        const oauth = this.appConfigService.get<OauthConfigModel>(\n            AppConfigValues.OAUTHCONFIG,\n            null\n        );\n        return (\n            this.authenticationService.isOauth() && oauth.silentLogin === false\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { JwtHelperService } from './jwt-helper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard extends AuthGuardBase {\n\n    ticketChangeBind: any;\n\n    constructor(private jwtHelperService: JwtHelperService,\n                authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n        this.ticketChangeBind = this.ticketChange.bind(this);\n\n        window.addEventListener('storage', this.ticketChangeBind);\n    }\n\n    ticketChange(event: StorageEvent) {\n        if (event.key === 'ticket-ECM' && event.newValue !== event.oldValue) {\n            this.ticketChangeRedirect(event, 'ECM');\n        }\n\n        if (event.key === 'ticket-BPM' && event.newValue !== event.oldValue) {\n            this.ticketChangeRedirect(event, 'BPM');\n        }\n\n        if (event.key === JwtHelperService.USER_ACCESS_TOKEN &&\n            this.jwtHelperService.getValueFromToken(event.newValue, JwtHelperService.USER_PREFERRED_USERNAME) !==\n            this.jwtHelperService.getValueFromToken(event.oldValue, JwtHelperService.USER_PREFERRED_USERNAME)) {\n            this.ticketChangeRedirect(event, 'ALL');\n        }\n    }\n\n    private ticketChangeRedirect(event: StorageEvent, provider: string) {\n        if (!event.newValue) {\n            this.redirectToUrl(provider, this.router.url);\n        } else {\n            window.location.reload();\n        }\n\n        window.removeEventListener('storage', this.ticketChangeBind);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isLoggedIn() || this.withCredentials) {\n            return true;\n        }\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ALL', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardEcm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isEcmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ECM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardBpm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isBpmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('BPM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from './jwt-helper.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardSsoRoleService implements CanActivate {\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let hasRole;\n        let hasRealmRole = false;\n        let hasClientRole = true;\n\n        if (route.data) {\n            if (route.data['roles']) {\n                const rolesToCheck = route.data['roles'];\n                hasRealmRole = this.hasRealmRoles(rolesToCheck);\n            }\n\n            if (route.data['clientRoles']) {\n                const clientRoleName = route.params[route.data['clientRoles']];\n                const rolesToCheck = route.data['roles'];\n                hasClientRole = this.hasRealmRolesForClientRole(clientRoleName, rolesToCheck);\n            }\n        }\n\n        hasRole = hasRealmRole && hasClientRole;\n\n        if (!hasRole && route.data && route.data['redirectUrl']) {\n            this.router.navigate(['/' + route.data['redirectUrl']]);\n        }\n\n        return hasRole;\n    }\n\n    constructor(private storageService: StorageService, private jwtHelperService: JwtHelperService, private router: Router) {\n    }\n\n    getRealmRoles(): string[] {\n        const access = this.jwtHelperService.getValueFromLocalAccessToken<any>('realm_access');\n        const roles = access ? access['roles'] : [];\n        return roles;\n    }\n\n    getClientRoles(client: string): string[] {\n        const clientRole = this.jwtHelperService.getValueFromLocalAccessToken<any>('resource_access')[client];\n        const roles = clientRole ? clientRole['roles'] : [];\n        return roles;\n    }\n\n    getAccessToken(): string {\n        return this.storageService.getItem(JwtHelperService.USER_ACCESS_TOKEN);\n    }\n\n    hasRealmRole(role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const realmRoles = this.getRealmRoles();\n            hasRole = realmRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    hasRealmRoles(rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasRealmRole(currentRole);\n        });\n    }\n\n    hasRealmRolesForClientRole(clientRole: string, rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasClientRole(clientRole, currentRole);\n        });\n    }\n\n    hasClientRole(clientRole, role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const clientRoles = this.getClientRoles(clientRole);\n            hasRole = clientRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find((app) => app.name === name)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find((app) => app.id === appId)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { Observable, from, interval, empty } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the first available rendition found for a node.\n     * @param nodeId ID of the target node\n     * @returns Information object for the rendition\n     */\n    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId)).pipe(\n            map((availableRenditions: RenditionPaging) => {\n                const renditionsAvailable: RenditionEntry[] = availableRenditions.list.entries.filter(\n                    (rendition) => (rendition.entry.id === 'pdf' || rendition.entry.id === 'imgpreview'));\n                const existingRendition = renditionsAvailable.find((rend) => rend.entry.status === 'CREATED');\n                return existingRendition ? existingRendition : renditionsAvailable[0];\n            }));\n    }\n\n    /**\n     * Generates a rendition for a node using the first available encoding.\n     * @param nodeId ID of the target node\n     * @returns Null response to indicate completion\n     */\n    generateRenditionForNode(nodeId: string): Observable<any> {\n        return this.getAvailableRenditionForNode(nodeId).pipe(\n            map((rendition: RenditionEntry) => {\n                if (rendition.entry.status !== 'CREATED') {\n                    return from(this.apiService.renditionsApi.createRendition(nodeId, { id: rendition.entry.id }));\n                } else {\n                    return empty();\n                }\n            })\n        );\n    }\n\n    /**\n     * Checks if the specified rendition is available for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the rendition is available, false otherwise\n     */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks if the node can be converted using the specified rendition.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the node can be converted, false otherwise\n     */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL linking to the specified rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns URL string\n     */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /**\n     * Gets information about a rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Information object about the rendition\n     */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /**\n     * Gets a list of all renditions for a node.\n     * @param nodeId ID of the target node\n     * @returns Paged list of rendition details\n     */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /**\n     * Creates a rendition for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Null response to indicate completion\n     */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, { id: encoding }));\n    }\n\n    /**\n     * Repeatedly attempts to create a rendition, through to success or failure.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @param pollingInterval Time interval (in milliseconds) between checks for completion\n     * @param retries Number of attempts to make before declaring failure\n     * @returns True if the rendition was created, false otherwise\n     */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((renditionEntry: RenditionEntry) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (renditionEntry.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n    private defaultLang: string = 'en';\n\n    constructor(private http: HttpClient) {\n    }\n\n    setDefaultLang(value: string) {\n        this.defaultLang = value || 'en';\n    }\n\n    registerProvider(name: string, path: string) {\n        const registered = this.providers.find((provider) => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find((x) => x.name === name) ? true : false;\n    }\n\n    fetchLanguageFile(lang: string, component: ComponentTranslationModel, fallbackUrl?: string): Observable<void> {\n        const translationUrl = fallbackUrl || `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n        return this.http.get(translationUrl).pipe(\n            map((res: Response) => {\n                component.json[lang] = res;\n            }),\n            retry(3),\n            catchError(() => {\n                if (!fallbackUrl && lang.includes('-')) {\n                    const [langId] = lang.split('-');\n\n                    if (langId && langId !== this.defaultLang) {\n                        const url = `${component.path}/${this.prefix}/${langId}${this.suffix}?v=${Date.now()}`;\n\n                        return this.fetchLanguageFile(lang, component, url);\n                    }\n                }\n                return throwError(`Failed to load ${translationUrl}`);\n            })\n        );\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                observableBatch.push(\n                    this.fetchLanguageFile(lang, component)\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find((x) => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach((model) => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map((observable) => {\n                return observable.pipe(\n                    catchError((error) => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return new Observable((observer) => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        const fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                const fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter((currentFile) => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                const minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            const file = this.queue.find((currentFile) => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                const next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach((file) => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel): any {\n        const opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().node.updateNodeContent(\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, emitter: EventEmitter<any>): any {\n\n        const promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', (err) => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', (data) => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch((err) => {\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.errorCode = ( error || {} ).status;\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JS-API call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JS-API\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, MinimalNode, NodePaging } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: NodeEntry) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JS-API\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `'${searchTerm}*' OR name:'${searchTerm}*'` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    /**\n     * Gets a list of nodes that match the given search criteria.\n     * @param term Term to search for\n     * @param options Options for delivery of the search results\n     * @returns List of nodes resulting from the search\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search.\n     * @param searchTerm Term to search for\n     * @param maxResults Maximum number of items in the list of results\n     * @param skipCount Number of higher-ranked items to skip over in the list\n     * @returns List of search results\n     */\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search with its parameters supplied by a QueryBody object.\n     * @param queryBody Object containing the search parameters\n     * @returns List of search results\n     */\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    /** The number of entities that exist in the collection before those included in this list. */\n    skipCount?: number;\n\n    /** The maximum number of items to return in the list. */\n    maxItems?: number;\n\n    /** The id of the node to start the search from. Supports the aliases -my-, -root- and -shared-. */\n    rootNodeId?: string;\n\n    /** Restrict the returned results to only those of the given node type and its sub-types. */\n    nodeType?: string;\n\n    /**\n     * Return additional information about the node. The available optional fields are:\n     * `allowableOperations`, `aspectNames`, `isLink`, `isLocked`, `path` and `properties`.\n     */\n    include?: string[];\n\n    /**\n     * String to control the order of the entities returned in a list. You can use this\n     * parameter to sort the list by one or more fields. Each field has a default sort order,\n     * which is normally ascending order (but see the JS-API docs to check if any fields used\n     * in a method have a descending default search order). To sort the entities in a specific\n     * order, you can use the \"ASC\" and \"DESC\" keywords for any field.\n     */\n    orderBy?: string;\n\n    /**\n     * List of field names. You can use this parameter to restrict the fields returned within\n     * a response if, for example, you want to save on overall bandwidth. The list applies to a\n     * returned individual entity or entries within a collection. If the API method also supports\n     * the `include` parameter, then the fields specified in the include parameter are returned in\n     * addition to those specified in the fields parameter.\n     */\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from '@alfresco/js-api';\nimport { Observable, from, of, Subject } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedLinksApiService {\n\n    error = new Subject<{ statusCode: number, message: string }>();\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JS-API\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JS-API\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<any | Error> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError((err: Error) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JS-API\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JS-API\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry | {}> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        const options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param actionName Name of the action to show in the title\n     * @param title Title for the dialog\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiCompatibility,\n    ContentApi,\n    Core\n} from '@alfresco/js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        const domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        const match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LockService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    isLocked(node: Node): boolean {\n        let isLocked = false;\n        if (this.hasLockConfigured(node)) {\n            if (this.isReadOnlyLock(node)) {\n                isLocked = true;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            } else if (this.isLockOwnerAllowed(node)) {\n                isLocked = this.alfrescoApiService.getInstance().getEcmUsername() !== node.properties['cm:lockOwner'].id;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            }\n        }\n        return isLocked;\n    }\n\n    private hasLockConfigured(node: Node): boolean {\n        return node.isFile && node.isLocked && node.properties['cm:lockType'];\n    }\n\n    private isReadOnlyLock(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'READ_ONLY_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private isLockOwnerAllowed(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'WRITE_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private getLockExpiryTime(node: Node): Moment {\n        if (node.properties['cm:expiryDate']) {\n            return moment(node.properties['cm:expiryDate'], 'yyyy-MM-ddThh:mm:ssZ');\n        }\n    }\n\n    private isLockExpired(node: Node): boolean {\n        const expiryLockTime = this.getLockExpiryTime(node);\n        return moment().isAfter(expiryLockTime);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*!\n* @license\n* Copyright 2019 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the 'License');\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an 'AS IS' BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nexport class DemoForm {\n\n    easyForm = {\n        'id': 1001,\n        'name': 'ISSUE_FORM',\n        'tabs': [],\n        'fields': [\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': '1498212398417',\n                'name': 'Label',\n                'type': 'container',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': false,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': null,\n                'className': null,\n                'dateDisplayFormat': null,\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label',\n                            'name': 'Label',\n                            'type': 'dropdown',\n                            'value': 'Choose one...',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': true,\n                            'options': [\n                                {\n                                    'id': 'empty',\n                                    'name': 'Choose one...'\n                                },\n                                {\n                                    'id': 'option_1',\n                                    'name': 'test1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'test2'\n                                },\n                                {\n                                    'id': 'option_3',\n                                    'name': 'test3'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': null,\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'Date',\n                            'name': 'Date',\n                            'type': 'date',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label5',\n                            'name': 'Label5',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label6',\n                            'name': 'Label6',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label4',\n                            'name': 'Label4',\n                            'type': 'integer',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label12',\n                            'name': 'Label12',\n                            'type': 'radio-buttons',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': [\n                                {\n                                    'id': 'option_1',\n                                    'name': 'Option 1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'Option 2'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ]\n                }\n            }\n        ],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false,\n        'globalDateFormat': 'D-M-YYYY'\n    };\n\n    formDefinition = {\n        'id': 3003,\n        'name': 'demo-01',\n        'taskId': '7501',\n        'taskName': 'Demo Form 01',\n        'tabs': [\n            {\n                'id': 'tab1',\n                'title': 'Text',\n                'visibilityCondition': null\n            },\n            {\n                'id': 'tab2',\n                'title': 'Misc',\n                'visibilityCondition': null\n            }\n        ],\n        'fields': [\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': '1488274019966',\n                'name': 'Label',\n                'type': 'container',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': null,\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': null,\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [],\n                    '2': []\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section4',\n                'name': 'Section 4',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab2',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label8',\n                            'name': 'Label8',\n                            'type': 'people',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label13',\n                            'name': 'Label13',\n                            'type': 'functional-group',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label18',\n                            'name': 'Label18',\n                            'type': 'readonly',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label19',\n                            'name': 'Label19',\n                            'type': 'readonly-text',\n                            'value': 'Display text as part of the form',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'HyperlinkRepresentation',\n                            'id': 'label15',\n                            'name': 'Label15',\n                            'type': 'hyperlink',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'hyperlinkUrl': 'www.google.com',\n                            'displayText': null\n                        },\n                        {\n                            'fieldType': 'AttachFileFieldRepresentation',\n                            'id': 'label16',\n                            'name': 'Label16',\n                            'type': 'upload',\n                            'value': [],\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1,\n                                'fileSource': {\n                                    'serviceId': 'all-file-sources',\n                                    'name': 'All file sources'\n                                }\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'metaDataColumnDefinitions': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label17',\n                            'name': 'Label17',\n                            'type': 'select-folder',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1,\n                                'folderSource': {\n                                    'serviceId': 'alfresco-1',\n                                    'name': 'Alfresco 5.2 Local',\n                                    'metaDataAllowed': true\n                                }\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'DynamicTableRepresentation',\n                'id': 'label14',\n                'name': 'Label14',\n                'type': 'dynamic-table',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab2',\n                'className': null,\n                'params': {\n                    'existingColspan': 1,\n                    'maxColspan': 1\n                },\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 2,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'columnDefinitions': [\n                    {\n                        'id': 'id',\n                        'name': 'id',\n                        'type': 'String',\n                        'value': null,\n                        'optionType': null,\n                        'options': null,\n                        'restResponsePath': null,\n                        'restUrl': null,\n                        'restIdProperty': null,\n                        'restLabelProperty': null,\n                        'amountCurrency': null,\n                        'amountEnableFractions': false,\n                        'required': true,\n                        'editable': true,\n                        'sortable': true,\n                        'visible': true,\n                        'endpoint': null,\n                        'requestHeaders': null\n                    },\n                    {\n                        'id': 'name',\n                        'name': 'name',\n                        'type': 'String',\n                        'value': null,\n                        'optionType': null,\n                        'options': null,\n                        'restResponsePath': null,\n                        'restUrl': null,\n                        'restIdProperty': null,\n                        'restLabelProperty': null,\n                        'amountCurrency': null,\n                        'amountEnableFractions': false,\n                        'required': true,\n                        'editable': true,\n                        'sortable': true,\n                        'visible': true,\n                        'endpoint': null,\n                        'requestHeaders': null\n                    }\n                ]\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section1',\n                'name': 'Section 1',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label1',\n                            'name': 'Label1',\n                            'type': 'text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label3',\n                            'name': 'Label3',\n                            'type': 'text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label2',\n                            'name': 'Label2',\n                            'type': 'multi-line-text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 2,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section2',\n                'name': 'Section 2',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label4',\n                            'name': 'Label4',\n                            'type': 'integer',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label7',\n                            'name': 'Label7',\n                            'type': 'date',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label5',\n                            'name': 'Label5',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label6',\n                            'name': 'Label6',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'AmountFieldRepresentation',\n                            'id': 'label11',\n                            'name': 'Label11',\n                            'type': 'amount',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': '10',\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'enableFractions': false,\n                            'currency': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section3',\n                'name': 'Section 3',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label9',\n                            'name': 'Label9',\n                            'type': 'dropdown',\n                            'value': 'Choose one...',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': true,\n                            'options': [\n                                {\n                                    'id': 'empty',\n                                    'name': 'Choose one...'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        },\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label12',\n                            'name': 'Label12',\n                            'type': 'radio-buttons',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': [\n                                {\n                                    'id': 'option_1',\n                                    'name': 'Option 1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'Option 2'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label10',\n                            'name': 'Label10',\n                            'type': 'typeahead',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ]\n                }\n            }\n        ],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'gridsterForm': false,\n        'globalDateFormat': 'D-M-YYYY'\n    };\n\n    simpleFormDefinition = {\n        'id': 1001,\n        'name': 'SIMPLE_FORM_EXAMPLE',\n        'description': '',\n        'version': 1,\n        'lastUpdatedBy': 2,\n        'lastUpdatedByFullName': 'Test01 01Test',\n        'lastUpdated': '2018-02-26T17:44:04.543+0000',\n        'stencilSetId': 0,\n        'referenceId': null,\n        'taskId': '9999',\n        'formDefinition': {\n            'tabs': [],\n            'fields': [\n                {\n                    'fieldType': 'ContainerRepresentation',\n                    'id': '1519666726245',\n                    'name': 'Label',\n                    'type': 'container',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'dateDisplayFormat': null,\n                    'layout': null,\n                    'sizeX': 2,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null,\n                    'numberOfColumns': 2,\n                    'fields': {\n                        '1': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'typeaheadField',\n                                'name': 'TypeaheadField',\n                                'type': 'typeahead',\n                                'value': null,\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': null,\n                                'hasEmptyValue': null,\n                                'options': null,\n                                'restUrl': 'https://jsonplaceholder.typicode.com/users',\n                                'restResponsePath': null,\n                                'restIdProperty': 'id',\n                                'restLabelProperty': 'name',\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 2\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 1,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ],\n                        '2': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'radioButton',\n                                'name': 'RadioButtons',\n                                'type': 'radio-buttons',\n                                'value': null,\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': null,\n                                'hasEmptyValue': null,\n                                'options': [\n                                    {\n                                        'id': 'option_1',\n                                        'name': 'Option 1'\n                                    },\n                                    {\n                                        'id': 'option_2',\n                                        'name': 'Option 2'\n                                    },\n                                    {\n                                        'id': 'option_3',\n                                        'name': 'Option 3'\n                                    }\n                                ],\n                                'restUrl': null,\n                                'restResponsePath': null,\n                                'restIdProperty': null,\n                                'restLabelProperty': null,\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 1\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 2,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ]\n                    }\n                },\n                {\n                    'fieldType': 'ContainerRepresentation',\n                    'id': '1519666735185',\n                    'name': 'Label',\n                    'type': 'container',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'dateDisplayFormat': null,\n                    'layout': null,\n                    'sizeX': 2,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null,\n                    'numberOfColumns': 2,\n                    'fields': {\n                        '1': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'selectBox',\n                                'name': 'SelectBox',\n                                'type': 'dropdown',\n                                'value': 'Choose one...',\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': 'manual',\n                                'hasEmptyValue': true,\n                                'options': [\n                                    {\n                                        'id': 'empty',\n                                        'name': 'Choose one...'\n                                    },\n                                    {\n                                        'id': 'option_1',\n                                        'name': '1'\n                                    },\n                                    {\n                                        'id': 'option_2',\n                                        'name': '2'\n                                    },\n                                    {\n                                        'id': 'option_3',\n                                        'name': '3'\n                                    }\n                                ],\n                                'restUrl': null,\n                                'restResponsePath': null,\n                                'restIdProperty': null,\n                                'restLabelProperty': null,\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 2\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 1,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ],\n                        '2': []\n                    }\n                }\n            ],\n            'outcomes': [],\n            'javascriptEvents': [],\n            'className': '',\n            'style': '',\n            'customFieldTemplates': {},\n            'metadata': {},\n            'variables': [],\n            'customFieldsValueInfo': {},\n            'gridsterForm': false\n        }\n    };\n\n    cloudFormDefinition = {\n        'formRepresentation': {\n            'id': 'text-form',\n            'name': 'test-start-form',\n            'version': 0,\n            'description': '',\n            'formDefinition': {\n                'tabs': [],\n                'fields': [\n                    {\n                        'id': '1511517333638',\n                        'type': 'container',\n                        'fieldType': 'ContainerRepresentation',\n                        'name': 'Label',\n                        'tab': null,\n                        'numberOfColumns': 2,\n                        'fields': {\n                            '1': [\n                                {\n                                    'fieldType': 'FormFieldRepresentation',\n                                    'id': 'texttest',\n                                    'name': 'texttest',\n                                    'type': 'text',\n                                    'value': null,\n                                    'required': false,\n                                    'placeholder': 'text',\n                                    'params': {\n                                        'existingColspan': 2,\n                                        'maxColspan': 6,\n                                        'inputMaskReversed': true,\n                                        'inputMask': '0#',\n                                        'inputMaskPlaceholder': '(0-9)'\n                                    }\n                                }\n                            ],\n                            '2': [{\n                                'fieldType': 'AttachFileFieldRepresentation',\n                                'id': 'attachfiletest',\n                                'name': 'attachfiletest',\n                                'type': 'upload',\n                                'required': true,\n                                'colspan': 2,\n                                'placeholder': 'attachfile',\n                                'params': {\n                                    'existingColspan': 2,\n                                    'maxColspan': 2,\n                                    'fileSource': {\n                                        'serviceId': 'local-file',\n                                        'name': 'Local File'\n                                    },\n                                    'multiple': true,\n                                    'link': false\n                                },\n                                'visibilityCondition': {\n                                }\n                            }]\n                        }\n                    }\n                ],\n                'outcomes': [],\n                'metadata': {\n                    'property1': 'value1',\n                    'property2': 'value2'\n                },\n                'variables': [\n                    {\n                        'name': 'variable1',\n                        'type': 'string',\n                        'value': 'value1'\n                    },\n                    {\n                        'name': 'variable2',\n                        'type': 'string',\n                        'value': 'value2'\n                    }\n                ]\n            }\n        }\n    };\n\n    getEasyForm(): any {\n        return this.easyForm;\n    }\n\n    getFormDefinition(): any {\n        return this.formDefinition;\n    }\n\n    getSimpleFormDefinition(): any {\n        return this.simpleFormDefinition;\n    }\n\n    getFormCloudDefinition(): any {\n        return this.cloudFormDefinition;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { StorageService } from './storage.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { DemoForm } from '../mock/form/demo-form.mock';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoreAutomationService {\n\n    public forms = new DemoForm();\n\n    constructor(private appConfigService: AppConfigService,\n                private alfrescoApiService: AlfrescoApiService,\n                private userPreferencesService: UserPreferencesService,\n                private storageService: StorageService) {\n    }\n\n    setup() {\n        const adfProxy = window['adf'] || {};\n\n        adfProxy.setConfigField = (field: string, value: string) => {\n            this.appConfigService.config[field] = JSON.parse(value);\n        };\n\n        adfProxy.setStorageItem = (key: string, data: string) => {\n            this.storageService.setItem(key, data);\n        };\n\n        adfProxy.setUserPreference = (key: string, data: any) => {\n            this.userPreferencesService.set(key, data);\n        };\n\n        adfProxy.setFormInEditor = (json: string) => {\n            this.forms.formDefinition = JSON.parse(json);\n        };\n\n        adfProxy.setCloudFormInEditor = (json: string) => {\n            this.forms.cloudFormDefinition = JSON.parse(json);\n        };\n\n        adfProxy.clearStorage = () => {\n            this.storageService.clear();\n        };\n\n        adfProxy.apiReset = () => {\n            this.alfrescoApiService.reset();\n        };\n\n        window['adf'] = adfProxy;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipeModule } from '../pipes/pipe.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material';\n\n@Component({\n    selector: 'adf-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-icon' }\n})\nexport class IconComponent {\n    private _value = '';\n    private _isCustom = false;\n\n    /** Theme color palette for the component. */\n    @Input()\n    color: ThemePalette;\n\n    get value(): string {\n        return this._value;\n    }\n\n    /** Icon value, which can be either a ligature name or a custom icon in the format `[namespace]:[name]`. */\n    @Input()\n    set value(value: string) {\n        this._value = value || 'settings';\n        this._isCustom = this._value.includes(':');\n    }\n\n    get isCustom(): boolean {\n        return this._isCustom;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\nimport { MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    declarations: [\n        IconComponent\n    ],\n    exports: [\n        IconComponent\n    ],\n    providers: [\n        ThumbnailService\n    ]\n})\nexport class IconModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { NotificationService } from '../services/notification.service';\nimport { NotificationModel } from '../models/notification.model';\nimport { MatMenuTrigger } from '@angular/material';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-notification-history',\n    styleUrls: ['notification-history.component.scss'],\n    templateUrl: 'notification-history.component.html'\n})\nexport class NotificationHistoryComponent implements OnDestroy {\n\n    onDestroy$ = new Subject<boolean>();\n\n    notifications: NotificationModel[] = [];\n\n    @ViewChild(MatMenuTrigger)\n    trigger: MatMenuTrigger;\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    constructor(\n        private notificationService: NotificationService) {\n        this.notificationService.messages\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((message) => {\n            this.notifications.push(message);\n        });\n    }\n\n    isEmptyNotification(): boolean {\n        return (!this.notifications || this.notifications.length === 0);\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    markAsRead() {\n        this.notifications = [];\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27) {\n            this.trigger.closeMenu();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NotificationHistoryComponent } from './notification-history.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        NotificationHistoryComponent\n    ],\n    exports: [\n        NotificationHistoryComponent\n    ]\n})\nexport class NotificationHistoryModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class PaginationModel extends Pagination {\n    merge?: boolean;\n\n    constructor(input?: any) {\n        super(input);\n        if (input) {\n            this.count = input.count;\n            this.hasMoreItems = input.hasMoreItems ? input.hasMoreItems : false;\n            this.merge = input.merge ? input.merge : false;\n            this.totalItems = input.totalItems;\n            this.skipCount = input.skipCount;\n            this.maxItems = input.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RequestPaginationModel {\n\n    skipCount?: number;\n\n    maxItems?: number;\n\n    merge?: boolean = false;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise((resolve) => {\n            this.onLoadSubject.next(this.config);\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach((key) => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService) {\n        super(appConfig);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    { id: 'TEST_VAR_1', type: 'string', value: 'test_value_1' },\n    { id: 'TEST_VAR_2', type: 'string', value: 'test_value_2' },\n    { id: 'TEST_VAR_3', type: 'string', value: 'test_value_3' }\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': { 'id': 'dropdown_id', 'name': 'dropdown_label' }\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ],\n    variables: [\n        {\n            'id': 'e621e8ff-42a6-499c-8121-33c7c35d8641',\n            'name': 'age',\n            'type': 'integer',\n            'value': 11\n        },\n        {\n            'id': '4f8aa99e-8526-429c-9d99-809978489d96',\n            'name': 'name',\n            'type': 'string',\n            'value': 'abc'\n        },\n        {\n            'id': '0207b649-ff07-4f3a-a589-d10afa507b9b',\n            'name': 'dob',\n            'type': 'date',\n            'value': '2019-05-13'\n        }\n    ]\n};\n\nexport let complexVisibilityJsonVisible = {\n    'id': 47591,\n    'name': 'Test-visibility',\n    'description': '',\n    'version': 4,\n    'lastUpdatedBy': 13,\n    'lastUpdatedByFullName': 'romano romano',\n    'lastUpdated': '2019-06-11T11:04:36.870+0000',\n    'stencilSetId': 0,\n    'referenceId': null,\n    'formDefinition': {\n        'tabs': [],\n        'fields': [{\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246123312',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label',\n                    'name': 'Label',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label1',\n                    'name': 'Label1',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246128696',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label4',\n                    'name': 'Label4',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label3',\n                    'name': 'Label3',\n                    'type': 'text',\n                    'value': '',\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246126964',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label2',\n                    'name': 'Label2',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label5',\n                    'name': 'Label5',\n                    'type': 'boolean',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': {\n                        'leftFormFieldId': 'label',\n                        'leftRestResponseId': null,\n                        'operator': '==',\n                        'rightValue': 'aaa',\n                        'rightType': null,\n                        'rightFormFieldId': '',\n                        'rightRestResponseId': '',\n                        'nextConditionOperator': 'and',\n                        'nextCondition': {\n                            'leftFormFieldId': 'label1',\n                            'leftRestResponseId': null,\n                            'operator': '!=',\n                            'rightValue': 'aaa',\n                            'rightType': null,\n                            'rightFormFieldId': '',\n                            'rightRestResponseId': '',\n                            'nextConditionOperator': 'and',\n                            'nextCondition': {\n                                'leftFormFieldId': 'label2',\n                                'leftRestResponseId': null,\n                                'operator': '!empty',\n                                'rightValue': null,\n                                'rightType': null,\n                                'rightFormFieldId': '',\n                                'rightRestResponseId': '',\n                                'nextConditionOperator': 'or',\n                                'nextCondition': {\n                                    'leftFormFieldId': 'label3',\n                                    'leftRestResponseId': null,\n                                    'operator': 'empty',\n                                    'rightValue': null,\n                                    'rightType': null,\n                                    'rightFormFieldId': '',\n                                    'rightRestResponseId': '',\n                                    'nextConditionOperator': null,\n                                    'nextCondition': null\n                                }\n                            }\n                        }\n                    }\n                }]\n            }\n        }],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false\n    }\n};\nexport let complexVisibilityJsonNotVisible = {\n    'id': 47591,\n    'name': 'Test-visibility',\n    'description': '',\n    'version': 4,\n    'lastUpdatedBy': 13,\n    'lastUpdatedByFullName': 'romano romano',\n    'lastUpdated': '2019-06-11T11:04:36.870+0000',\n    'stencilSetId': 0,\n    'referenceId': null,\n    'formDefinition': {\n        'tabs': [],\n        'fields': [{\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246123312',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label',\n                    'name': 'Label',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label1',\n                    'name': 'Label1',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246128696',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label4',\n                    'name': 'Label4',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label3',\n                    'name': 'Label3',\n                    'type': 'text',\n                    'value': 'OPSSS',\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246126964',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label2',\n                    'name': 'Label2',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label5',\n                    'name': 'Label5',\n                    'type': 'boolean',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': {\n                        'leftFormFieldId': 'label',\n                        'leftRestResponseId': null,\n                        'operator': '==',\n                        'rightValue': 'aaa',\n                        'rightType': null,\n                        'rightFormFieldId': '',\n                        'rightRestResponseId': '',\n                        'nextConditionOperator': 'and',\n                        'nextCondition': {\n                            'leftFormFieldId': 'label1',\n                            'leftRestResponseId': null,\n                            'operator': '!=',\n                            'rightValue': 'aaa',\n                            'rightType': null,\n                            'rightFormFieldId': '',\n                            'rightRestResponseId': '',\n                            'nextConditionOperator': 'and',\n                            'nextCondition': {\n                                'leftFormFieldId': 'label2',\n                                'leftRestResponseId': null,\n                                'operator': '!empty',\n                                'rightValue': null,\n                                'rightType': null,\n                                'rightFormFieldId': '',\n                                'rightRestResponseId': '',\n                                'nextConditionOperator': 'or',\n                                'nextCondition': {\n                                    'leftFormFieldId': 'label3',\n                                    'leftRestResponseId': null,\n                                    'operator': 'empty',\n                                    'rightValue': null,\n                                    'rightType': null,\n                                    'rightFormFieldId': '',\n                                    'rightRestResponseId': '',\n                                    'nextConditionOperator': null,\n                                    'nextCondition': null\n                                }\n                            }\n                        }\n                    }\n                }]\n            }\n        }],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll((done) =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DirectionalityConfigService } from '../services/directionality-config.service';\n\nexport function directionalityConfigFactory(\n    directionalityConfigService: DirectionalityConfigService\n): Function { return () => directionalityConfigService; }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Directionality, Direction } from '@angular/cdk/bidi';\nimport { UserPreferencesService } from '../services/user-preferences.service';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DirectionalityConfigService {\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private rendererFactory: RendererFactory2,\n        private userPreferencesService: UserPreferencesService,\n        private directionality: Directionality\n    ) {\n        const renderer: Renderer2 = this.rendererFactory.createRenderer(null, null);\n\n        this.userPreferencesService\n            .select('textOrientation')\n            .subscribe((direction: Direction) => {\n                renderer.setAttribute(this.document.body, 'dir', direction);\n                (<any> this.directionality).value = direction;\n            });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormBaseModule } from './form/form-base.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\nimport { NotificationHistoryModule } from './notification-history/notification-history.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { TranslationService } from './services/translation.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { IconModule } from './icon/icon.module';\nimport { TranslateLoaderService } from './services/translate-loader.service';\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\nimport { directionalityConfigFactory } from './services/directionality-config-factory';\nimport { DirectionalityConfigService } from './services/directionality-config.service';\n\n@NgModule({\n    imports: [\n        TranslateModule,\n        ExtensionsModule.forChild(),\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        IconModule,\n        SortingPickerModule,\n        NotificationHistoryModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule,\n        IconModule,\n        NotificationHistoryModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                TranslateStore,\n                TranslateService,\n                { provide: TranslateLoader, useClass: TranslateLoaderService },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: directionalityConfigFactory,\n                    deps: [ DirectionalityConfigService ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRendition = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'NOT_CREATED'\n    }\n};\n\nexport let fakeRenditionCreated = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'CREATED'\n    }\n};\n\nexport let fakeRenditionsList = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            }\n        ]\n    }\n};\n\nexport let fakeRenditionsListWithACreated = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'CREATED'\n                }\n            }\n        ]\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let mockToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ' +\n    'zdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJnaXZ' +\n    'lbl9uYW1lIjoiSm9obiIsImFkbWluIjp0cnVlLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwicHJ' +\n    'lZmVycmVkX3VzZXJuYW1lIjoiam9obkRvZTEiLCJqdGkiOiI2MmQ3YjA4NS1hNTJjLTRjZmEtYjA2Zi1' +\n    'hODFhN2IwNjRjZDIiLCJpYXQiOjE1NDM0MTA0NzcsImV4cCI6MTU0MzQxNTIxM30.pSP86kmX3keuU5E3ndaOUq2TzKdJRsuMnBdFz3Y-UEU';\n"]}