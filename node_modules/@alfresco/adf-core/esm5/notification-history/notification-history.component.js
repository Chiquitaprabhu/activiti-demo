/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ViewChild } from '@angular/core';
import { NotificationService } from '../services/notification.service';
import { MatMenuTrigger } from '@angular/material';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
var NotificationHistoryComponent = /** @class */ (function () {
    function NotificationHistoryComponent(notificationService) {
        var _this = this;
        this.notificationService = notificationService;
        this.onDestroy$ = new Subject();
        this.notifications = [];
        /**
         * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
         */
        this.menuPositionX = 'after';
        /**
         * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
         */
        this.menuPositionY = 'below';
        this.notificationService.messages
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((/**
         * @param {?} message
         * @return {?}
         */
        function (message) {
            _this.notifications.push(message);
        }));
    }
    /**
     * @return {?}
     */
    NotificationHistoryComponent.prototype.isEmptyNotification = /**
     * @return {?}
     */
    function () {
        return (!this.notifications || this.notifications.length === 0);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NotificationHistoryComponent.prototype.onKeyPress = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.closeUserModal(event);
    };
    /**
     * @return {?}
     */
    NotificationHistoryComponent.prototype.markAsRead = /**
     * @return {?}
     */
    function () {
        this.notifications = [];
    };
    /**
     * @return {?}
     */
    NotificationHistoryComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    };
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    NotificationHistoryComponent.prototype.closeUserModal = /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event.keyCode === 27) {
            this.trigger.closeMenu();
        }
    };
    NotificationHistoryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-notification-history',
                    template: "<div (keyup)=\"onKeyPress($event)\">\n    <button mat-button [matMenuTriggerFor]=\"menu\" class=\"adf-notification-history-menu_button\"\n            id=\"adf-notification-history-open-button\">\n        <mat-icon>mail_outline</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" [xPosition]=\"menuPositionX\" [yPosition]=\"menuPositionY\"\n              [overlapTrigger]=\"false\" id=\"adf-notification-history-menu\" class=\"adf-notification-history-menu\">\n\n        <div id=\"adf-notification-history-list\">\n            <mat-list>\n                <mat-list-item>\n                    <h6 mat-line>{{ 'NOTIFICATION_HISTORY.NOTIFICATIONS' | translate }}</h6>\n                </mat-list-item>\n            </mat-list>\n            <mat-divider></mat-divider>\n\n            <mat-list>\n                <mat-list-item *ngFor=\"let notification of notifications\">\n                    <mat-icon mat-list-icon>{{notification.info? notification.info: 'info'}}</mat-icon>\n                    <h4 mat-line>{{notification.message}}</h4>\n                    <p mat-line> {{notification.dateTime | date}} </p>\n                </mat-list-item>\n                <mat-list-item *ngIf=\"isEmptyNotification()\" id=\"adf-notification-history-component-no-message\">\n                    <h4 mat-line>{{ 'NOTIFICATION_HISTORY.NO_MESSAGE' | translate }}</h4>\n                </mat-list-item>\n                <mat-action-list *ngIf=\"!isEmptyNotification()\" id=\"adf-notification-history-mark-as-read\">\n                    <button mat-list-item (click)=\"markAsRead()\">{{ 'NOTIFICATION_HISTORY.MARK_AS_READ' | translate }}\n                    </button>\n                </mat-action-list>\n            </mat-list>\n        </div>\n    </mat-menu>\n</div>\n",
                    styles: [".adf-notification-history-menu_button.mat-button{margin-right:0;border-radius:90%;padding:0;min-width:40px;height:40px}@media only screen and (min-device-width:480px){.mat-menu-panel.adf-notification-history-menu{max-height:450px;min-width:450px;overflow:auto;padding:0}}.mat-menu-panel.adf-notification-history-menu .mat-menu-content{padding:0}"]
                }] }
    ];
    /** @nocollapse */
    NotificationHistoryComponent.ctorParameters = function () { return [
        { type: NotificationService }
    ]; };
    NotificationHistoryComponent.propDecorators = {
        trigger: [{ type: ViewChild, args: [MatMenuTrigger,] }],
        menuPositionX: [{ type: Input }],
        menuPositionY: [{ type: Input }]
    };
    return NotificationHistoryComponent;
}());
export { NotificationHistoryComponent };
if (false) {
    /** @type {?} */
    NotificationHistoryComponent.prototype.onDestroy$;
    /** @type {?} */
    NotificationHistoryComponent.prototype.notifications;
    /** @type {?} */
    NotificationHistoryComponent.prototype.trigger;
    /**
     * Custom choice for opening the menu at the bottom. Can be `before` or `after`.
     * @type {?}
     */
    NotificationHistoryComponent.prototype.menuPositionX;
    /**
     * Custom choice for opening the menu at the bottom. Can be `above` or `below`.
     * @type {?}
     */
    NotificationHistoryComponent.prototype.menuPositionY;
    /**
     * @type {?}
     * @private
     */
    NotificationHistoryComponent.prototype.notificationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWhpc3RvcnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsibm90aWZpY2F0aW9uLWhpc3Rvcnkvbm90aWZpY2F0aW9uLWhpc3RvcnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUV2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFL0I7SUFzQkksc0NBQ1ksbUJBQXdDO1FBRHBELGlCQU9DO1FBTlcsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQWhCcEQsZUFBVSxHQUFHLElBQUksT0FBTyxFQUFXLENBQUM7UUFFcEMsa0JBQWEsR0FBd0IsRUFBRSxDQUFDOzs7O1FBT3hDLGtCQUFhLEdBQVcsT0FBTyxDQUFDOzs7O1FBSWhDLGtCQUFhLEdBQVcsT0FBTyxDQUFDO1FBSTVCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRO2FBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ2hDLFNBQVM7Ozs7UUFBQyxVQUFDLE9BQU87WUFDbkIsS0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckMsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7O0lBRUQsMERBQW1COzs7SUFBbkI7UUFDSSxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7Ozs7O0lBRUQsaURBQVU7Ozs7SUFBVixVQUFXLEtBQW9CO1FBQzNCLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELGlEQUFVOzs7SUFBVjtRQUNJLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFFRCxrREFBVzs7O0lBQVg7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7OztJQUVPLHFEQUFjOzs7OztJQUF0QixVQUF1QixNQUFxQjtRQUN4QyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEtBQUssRUFBRSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDOztnQkFwREosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSwwQkFBMEI7b0JBRXBDLDh1REFBa0Q7O2lCQUNyRDs7OztnQkFWUSxtQkFBbUI7OzswQkFpQnZCLFNBQVMsU0FBQyxjQUFjO2dDQUl4QixLQUFLO2dDQUlMLEtBQUs7O0lBa0NWLG1DQUFDO0NBQUEsQUFyREQsSUFxREM7U0FoRFksNEJBQTRCOzs7SUFFckMsa0RBQW9DOztJQUVwQyxxREFBd0M7O0lBRXhDLCtDQUN3Qjs7Ozs7SUFHeEIscURBQ2dDOzs7OztJQUdoQyxxREFDZ0M7Ozs7O0lBRzVCLDJEQUFnRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdDaGlsZCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uTW9kZWwgfSBmcm9tICcuLi9tb2RlbHMvbm90aWZpY2F0aW9uLm1vZGVsJztcbmltcG9ydCB7IE1hdE1lbnVUcmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1ub3RpZmljYXRpb24taGlzdG9yeScsXG4gICAgc3R5bGVVcmxzOiBbJ25vdGlmaWNhdGlvbi1oaXN0b3J5LmNvbXBvbmVudC5zY3NzJ10sXG4gICAgdGVtcGxhdGVVcmw6ICdub3RpZmljYXRpb24taGlzdG9yeS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uSGlzdG9yeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgICBvbkRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8Ym9vbGVhbj4oKTtcblxuICAgIG5vdGlmaWNhdGlvbnM6IE5vdGlmaWNhdGlvbk1vZGVsW10gPSBbXTtcblxuICAgIEBWaWV3Q2hpbGQoTWF0TWVudVRyaWdnZXIpXG4gICAgdHJpZ2dlcjogTWF0TWVudVRyaWdnZXI7XG5cbiAgICAvKiogQ3VzdG9tIGNob2ljZSBmb3Igb3BlbmluZyB0aGUgbWVudSBhdCB0aGUgYm90dG9tLiBDYW4gYmUgYGJlZm9yZWAgb3IgYGFmdGVyYC4gKi9cbiAgICBASW5wdXQoKVxuICAgIG1lbnVQb3NpdGlvblg6IHN0cmluZyA9ICdhZnRlcic7XG5cbiAgICAvKiogQ3VzdG9tIGNob2ljZSBmb3Igb3BlbmluZyB0aGUgbWVudSBhdCB0aGUgYm90dG9tLiBDYW4gYmUgYGFib3ZlYCBvciBgYmVsb3dgLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgbWVudVBvc2l0aW9uWTogc3RyaW5nID0gJ2JlbG93JztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIG5vdGlmaWNhdGlvblNlcnZpY2U6IE5vdGlmaWNhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLm1lc3NhZ2VzXG4gICAgICAgICAgICAucGlwZSh0YWtlVW50aWwodGhpcy5vbkRlc3Ryb3kkKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgIHRoaXMubm90aWZpY2F0aW9ucy5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpc0VtcHR5Tm90aWZpY2F0aW9uKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gKCF0aGlzLm5vdGlmaWNhdGlvbnMgfHwgdGhpcy5ub3RpZmljYXRpb25zLmxlbmd0aCA9PT0gMCk7XG4gICAgfVxuXG4gICAgb25LZXlQcmVzcyhldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICB0aGlzLmNsb3NlVXNlck1vZGFsKGV2ZW50KTtcbiAgICB9XG5cbiAgICBtYXJrQXNSZWFkKCkge1xuICAgICAgICB0aGlzLm5vdGlmaWNhdGlvbnMgPSBbXTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5vbkRlc3Ryb3kkLm5leHQodHJ1ZSk7XG4gICAgICAgIHRoaXMub25EZXN0cm95JC5jb21wbGV0ZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgY2xvc2VVc2VyTW9kYWwoJGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICAgIGlmICgkZXZlbnQua2V5Q29kZSA9PT0gMjcpIHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlci5jbG9zZU1lbnUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==